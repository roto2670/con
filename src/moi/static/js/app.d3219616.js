(function(t){function e(e){for(var s,n,d=e[0],c=e[1],r=e[2],l=0,m=[];l<d.length;l++)n=d[l],a[n]&&m.push(a[n][0]),a[n]=0;for(s in c)Object.prototype.hasOwnProperty.call(c,s)&&(t[s]=c[s]);h&&h(e);while(m.length)m.shift()();return o.push.apply(o,r||[]),i()}function i(){for(var t,e=0;e<o.length;e++){for(var i=o[e],s=!0,d=1;d<i.length;d++){var c=i[d];0!==a[c]&&(s=!1)}s&&(o.splice(e--,1),t=n(n.s=i[0]))}return t}var s={},a={app:0},o=[];function n(e){if(s[e])return s[e].exports;var i=s[e]={i:e,l:!1,exports:{}};return t[e].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=s,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(i,s,function(e){return t[e]}.bind(null,s));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/";var d=window["webpackJsonp"]=window["webpackJsonp"]||[],c=d.push.bind(d);d.push=e,d=d.slice();for(var r=0;r<d.length;r++)e(d[r]);var h=c;o.push([0,"chunk-vendors"]),i()})({0:function(t,e,i){t.exports=i("56d7")},"034f":function(t,e,i){"use strict";var s=i("64a9"),a=i.n(s);a.a},"1aa9":function(t,e){window.CONSTANTS={HUB_VIEW:{NOT_IN_MAP:0,IN_MAP:1},URL:{BASE_IMG:"static/location/imgs/",YOUR_CLOUD:"https://c2.prota.space",CONSOLE:""},GADGET_INFO:{1:"JUMBO DRILL(2B)",2:"JUMBO DRILL(3B)",3:"CHARGING CAR",4:"WHEEL LOADER",5:"DUMP TRUCK",6:"EXCAVATOR(WHEEL)",7:"EXCAVATOR(CRAWLER)",8:"SHOTCRETE MACHINE",9:"JCB",10:"CORE DRILLING MACHINE",11:"DOZER",12:"GROUTING MACHINE",13:"MAI PUMP",14:"MOBILE PRODUCTION UNIT",15:"CHARGING PUMP UNIT",16:"BUS",17:"WCBH DRILLING MACHINE",18:"Explosive Van",19:"Concrete Mixer Truck"},MINIMUM_NUMBER:{HUB:1,FILTERED_BEACONS:16},CONTEXT_TYPE:{SCANNER:0,IPCAM:1},USER_STAGE:{SK_ADMIN:0,SK_NORMAL:1,SK_HQ:3,ADNOC_SITE:4,ADNOC_HQ:5,MOI:6},REQUEST_TYPE:{SUBSCRIBE:"subscribe",UNSUBSCRIBE:"unsubscribe",GET_INFO:"get_info",GET_MAP_FILE:"get_map_file",SET_MAP_FILE:"set_map_file",GET_DATA:"get_data",UPDATE_DATA:"update_data",GET_DETECTED_LIST:"get_detected_list"},EVENT_TYPE:{ADDED:"added",UPDATED:"updated",REMOVED:"removed",GET_DETECTED_LIST:"detected"},PRODUCT_KIND:{HUB:"hub",IPCAM:"ipcam",BEACON:"beacon",MIBSSKEC:"mibsskec"}}},"1d68":function(t,e,i){},"54d9":function(t,e,i){"use strict";var s=i("b347"),a=i.n(s);a.a},"56d7":function(t,e,i){"use strict";i.r(e);var s={};i.r(s),i.d(s,"websocketConnect",function(){return p}),i.d(s,"websocketDisconnect",function(){return b}),i.d(s,"subscribe",function(){return v}),i.d(s,"unsubscribe",function(){return w}),i.d(s,"updateData",function(){return f}),i.d(s,"getMapFile",function(){return E}),i.d(s,"postMapFile",function(){return I}),i.d(s,"updateGadgetData",function(){return S}),i.d(s,"getInfo",function(){return T}),i.d(s,"getIpcams",function(){return y}),i.d(s,"getHubs",function(){return N}),i.d(s,"getBeacons",function(){return k}),i.d(s,"getDetectBeaconList",function(){return C}),i.d(s,"getBeaconImg",function(){return D}),i.d(s,"getHubListConnectedToGadget",function(){return O}),i.d(s,"getGadget",function(){return $});var a=i("2b0e"),o=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{attrs:{id:"locationTracking"}},[i("div",{directives:[{name:"show",rawName:"v-show",value:t.isLoaded,expression:"isLoaded"}],staticClass:"loading"},[t._m(0)]),t.isWebsocketConnected?i("Top",{attrs:{info:t.info}}):t._e(),t.isWebsocketConnected?i("Map",{attrs:{info:t.info},on:{"map-load":t.handleMapLoad}}):t._e()],1)},n=[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"main-loader"},[i("div"),i("div"),i("div"),i("div")])}],d=function(){var t=this,e=t.$createElement,i=t._self._c||e;return t.isEmptyUrl?i("div",{attrs:{id:t.id}}):t._e()},c=[],r=i("ec60"),h=i("bc3a"),l=i.n(h);i("f654"),i("7e3c");class m{constructor(){this._handler={},this._subscribeHandlers=null,this.socket=null,this.clientId=null}connect(t,e,i,s,a){this.socket=new WebSocket(`ws://${t}:${e}/ws`),this.socket.onopen=i,this.socket.onerror=a,this.socket.onclose=s,this.socket.onmessage=t=>{this._onMessage(t)}}disconnect(){this.socket&&this.socket.close()}send(t){this.socket&&this.socket.send(JSON.stringify(t))}call(t,e){const i=this._createRequestId();_.extend(t,{i:i}),this._registerHandler(i,e),this.send(t)}subscribe(t){this.call({e:window.CONSTANTS.REQUEST_TYPE.SUBSCRIBE,_t:new Date/1e3},t=>{this.clientId=t}),this._subscribeHandlers=t}unsubscribe(){this.call({e:window.CONSTANTS.REQUEST_TYPE.UNSUBSCRIBE,kwargs:{client_id:this.clientId},_t:new Date/1e3},()=>{}),this._subscribeHandlers=null}_createRequestId(){return Math.random().toString(36).substr(2,5)}_registerHandler(t,e){this._handler[t]||(this._handler[t]=e)}_authenticate(){if(this.socket){let t={};t.ident=_createRequestId(),t.value={name:"authenticate",args:"key",namespace:""};const e=JSON.stringify(t);this.send(e)}}_onOpen(t){console.log("Socket is connected",t),1===this.readyState&&this._authenticate()}_onClose(t){console.log("Socket is disconnected ",t)}_onMessage(t){let e=null;try{e=JSON.parse(t.data)}finally{e&&(_.has(e,"i")?this._handleResponse(e):this._handleEvent(e))}}_handleResponse(t){const e=this._handler[t.i];e&&(e(t.v),delete this._handler[t.i])}_handleEvent(t){if(t)switch(t.e){case window.CONSTANTS.EVENT_TYPE.ADDED:this._subscribeHandlers.added(t);break;case window.CONSTANTS.EVENT_TYPE.UPDATED:this._subscribeHandlers.updated(t);break;case window.CONSTANTS.EVENT_TYPE.REMOVED:this._subscribeHandlers.removed(t);break;case window.CONSTANTS.EVENT_TYPE.GET_DETECTED_LIST:this._subscribeHandlers.getDetectedList(t);break}}_onError(t){console.log("Socket is error ",t)}}const u=new m,g=()=>new Date/1e3,p=(t,e,i,s,a)=>{u.connect(t,e,i,s,a)},b=()=>{u.disconnect()},v=t=>{u.subscribe(t)},w=()=>{u.unsubscribe()},f=(t,e,i)=>{u.call({e:window.CONSTANTS.REQUEST_TYPE.UPDATE_DATA,kwargs:{kind:e,data:t},_t:g()},i)},E=t=>{const e=`${window.CONSTANTS.URL.BASE_IMG}map.png`;l()({url:`${window.CONSTANTS.URL.CONSOLE}/dashboard/location/view`,method:"GET",responseType:"text"}).then(i=>{i.data?(console.log("Success to Get map image file",i.data),t(`${window.location.protocol}//${window.location.host}${i.data}`)):(console.warn("Sorry, Img file does not exist"),t(e))}).catch(i=>{console.warn("Failed to get map file ",i),t(e)})},I=(t,e,i)=>{let s=new FormData;t?(s.append("file",t),l.a.post(`${window.CONSTANTS.URL.CONSOLE}/dashboard/location/upload`,s,{headers:{"Content-Type":"multiart/form-data"}}).then(t=>{console.warn("Success to Upload map image file"),e(`http://${window.location.host}${t.data}`)}).catch(t=>{i(t)})):i()},S=(t,e,i)=>{l.a.post(`${window.CONSTANTS.URL.CONSOLE}/dash/beacons/update`,{beacon:t},{headers:{"Content-Type":"application/json"}}).then(t=>{e()}).catch(t=>{i()})},T=t=>{l()({url:`${window.CONSTANTS.URL.CONSOLE}/dash/location/info`,method:"GET",responseType:"text"}).then(e=>{e.data?t(e.data):(console.warn("File is not exist"),t())}).catch(e=>{console.warn("Failed to get info ",e),t()})},y=t=>{u.call({e:window.CONSTANTS.REQUEST_TYPE.GET_DATA,kwargs:{kind:window.CONSTANTS.PRODUCT_KIND.IPCAM},_t:g()},t)},N=t=>{u.call({e:window.CONSTANTS.REQUEST_TYPE.GET_DATA,kwargs:{kind:window.CONSTANTS.PRODUCT_KIND.HUB},_t:g()},t)},k=(t,e)=>{u.call({e:window.CONSTANTS.REQUEST_TYPE.GET_DATA,kwargs:{kind:t},_t:g()},e)},C=(t,e)=>{u.call({e:window.CONSTANTS.REQUEST_TYPE.GET_DETECTED_LIST,kwargs:{ids:t,client_id:u.clientId},_t:g()},e)},D=(t,e,i)=>{},O=(t,e)=>{l()({url:`${window.CONSTANTS.URL.CONSOLE}/dash/hubs/detected/${t}`,method:"GET",responseType:"text"}).then(t=>{const i=t.data;i&&_.isArray(i.data)?e(i):(console.warn("fail to load connectedGadget"),e({}))}).catch(t=>{console.warn("Failed to get hub list connected to gadget ",t),e({})})},$=(t,e,i)=>{l()({url:`${window.CONSTANTS.URL.CONSOLE}/dash/beacons/${t}`,method:"GET",responseType:"text"}).then(s=>{s.data?e(s.data):i(`Failed to get gadget, id: ${t}`)}).catch(t=>{i(t)})};let A=null;class M{constructor(t,e,i,s){if(A)return A;this._timers=[],this._isRunning=!1,this._vm=t,this._detectedCallback=i||function(){},this._failCallback=s||function(){},this.check_threshold=null,this.info=e,A=this}start(){this._isRunning=!0,_.isNumber(this.info.interval)?this.check_threshold=1e3*this.info.interval:this.check_threshold=6e4,this.check_threshold=6e6,this._timers.push(setInterval(()=>{this._refreshBeacons()},this.check_threshold)),console.debug("Beacon detector started")}stop(){this._clearTimer(),this._isRunning=!1,console.debug("Beacon detector stopped")}isRunning(){return this._isRunning}_refreshBeacons(){this._detectedCallback()}_clearTimer(){_.forEach(this._timers,t=>{try{clearInterval(t)}catch(e){console.warn("Failed to clear detector timer.",e)}}),this._timers=[]}}var L={methods:{isNumber:t=>!_.isNaN(t)&&_.isNumber(t),isScanner:t=>{return _.isEqual(t,window.CONSTANTS.PRODUCT_KIND.HUB)},isIpcam:t=>{return _.isEqual(t,window.CONSTANTS.PRODUCT_KIND.IPCAM)}}},B=i("5118"),G={name:"Map",props:{info:{type:Object,default:{}}},data(){return{id:"map",map:null,url:"",zoomLv:"",hubLayer:"",workerLayer:"",camLayer:"",ipcam:"",ipcams:[],contextCoordinate:null,infoWindow:null,hubInfoWindow:null,hubFilterOn:0,ipcamFilterOn:0,hubSetIntervalData:{},ipcamSetIntervalData:{},gadgetCount:{},gadgetInfoNumber:this._.keys(window.CONSTANTS.GADGET_INFO),selectFilteredBeacons:this._.keys(window.CONSTANTS.GADGET_INFO),bcnsData:{},lastUpdatedData:{},checkIsUpdatedInterval:null,options:{custom:null,items:[]},markerMap:{hubs:{},cams:{}},tags:{xll:["1","2","8"],xl:["3","14","15","18","19"],l:["4","5","6","7","9","11"]}}},methods:{initloadMap(){this.showLoading(),this.services.getMapFile(t=>{this.map=new r["c"](this.id,{center:[90,50],zoom:5,maxZoom:7,minZoom:4,maxExtent:new r["a"](0,0,180,80),zoomAnimation:!0,zoomInCenter:!1,panAnimation:!1,dragRotate:!1,dragPitch:!1,drgaRotatePitch:!1,touchGesture:!1,touchZoom:!1,touchRotate:!1,touchPitch:!1,touchZoomRotate:!1,doubleClickZoom:!1,baseLayer:new r["b"]("base",[{url:t,extent:[0,0,180,80],opactiy:1}],{opactiy:1})}),this.map.once("baselayerload",()=>{this.hubLayer=new r["e"]("vector1").addTo(this.map),this.workerLayer=new r["e"]("vector2").addTo(this.map),this.camLayer=new r["e"]("vector3").addTo(this.map),this.workerLayer.setZIndex(1),this.hubLayer.setZIndex(3),this.initContextMenu(),this.map.fitExtent(),this.loadItems(this.info),this.initBeaconLocationHandler(this.info),this.hideLoading()}),this.map.on("zoomend",t=>{this.zoomLv=this.map.getZoom()/11*50;let e=this.zoomLv,i=this.zoomLv;this._.forEach(this.markerMap.hubs,t=>{t.updateSymbol({markerWidth:e,markerHeight:i})}),this._.forEach(this.markerMap.cams,t=>{t.updateSymbol({markerWidth:e,markerHeight:i})}),this._.forEach(this.bcnsData,t=>{if(t.marker.isVisible()){e=this.zoomLv,i=this.zoomLv;const s=t.tags;this._.includes(this.tags.xll,s)?(i*=2,this._.isEqual(s,"8")?e*=3.1:e*=3.7):this._.includes(this.tags.xl,s)?(e*=2,i*=1.6):this._.includes(this.tags.l,s)?(i*=1.4,this._.isEqual(s,"9")||this._.isEqual(s,"11")?e*=1.45:this._.isEqual(s,"4")||this._.isEqual(s,"5")?e*=1.8:e*=1.4):this._.isEqual(s,"17")||this._.isEqual(s,"10")?e*=1.2:(this._.isEqual(s,"12"),e*=1.1),t.marker.updateSymbol({markerWidth:e,markerHeight:i})}})})})},initBeaconLocationHandler(t){this.beaconDetector=new M(this,t,()=>{this.infoWindow&&this.infoWindow.remove(),this.drawItems()},t=>{console.warn("There's no data to update")}),this.startDetector()},startRefreshInterval(){this.checkIsUpdatedInterval||(this.checkIsUpdatedInterval=setInterval(()=>{const t=new Date/1e3;this._.forEach(this.lastUpdatedData,(e,i)=>{t-e>20&&(delete this.lastUpdatedData[i],this.bcnsData[i].marker.remove(),delete this.bcnsData[i],this.$store.commit("removeGadgetLocation",i))})},2e4))},stopRefreshInterval(){this.checkIsUpdatedInterval&&clearInterval(this.checkIsUpdatedInterval),this.checkIsUpdatedInterval=null},initContextMenu(){this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_ADMIN)&&(this.contextMenuOption={custom:!0,items:'<div class="custom_menu"><div class="plus-symbol"></div>\n                        <div class="deviceText">Device</div><div class="addText">ADD</div>\n                        <div class="additem">\n                        <div class="scanneritem">Add SCANNER</div>\n                        <div class="camitem">Add IPCAM</div></div></div>',dx:-75,animation:"fade"},this.map.on("contextmenu",t=>{this.contextCoordinate=t.coordinate,this.map.closeMenu(),this.map.setMenu(this.contextMenuOption).openMenu(t.coordinate),document.getElementsByClassName("scanneritem")[0].onclick=()=>{this.handleAddHub(t.coordinate)},document.getElementsByClassName("camitem")[0].onclick=()=>{this.handleAddIPCam(t.coordinate)}}))},loadItems(t){this.services.getBeacons(t.product_id,t=>{this.$store.commit("addDetectedGadget",t),this.services.getHubs(t=>{this._.forEach(t,t=>{this.$store.commit("addHub",t),this._.isEmpty(t.custom)||this._.isEmpty(t.custom.map_location)||(this.drawHub(t.id,t.custom.map_location,!0),this.services.getDetectBeaconList([t.id],()=>{this.startRefreshInterval()}))})})}),this.services.getIpcams(t=>{this._.forEach(t,t=>{this.$store.commit("addIpcam",t)}),this.drawIpCams(t,!0)})},drawItems(){const t=this.$store.getters.getHubs,e=this.$store.getters.getIpCams;this._.forEach(t,t=>{this._.isEmpty(t.custom)||this._.isEmpty(t.custom.map_location)||this.drawHub(t.id,t.custom.map_location,!0)}),this.drawIpCams(e,!0)},handleAddHub(t){this.showhubList(t,e=>{this.map.closeMenu(e);let i=this.$store.getters.getHub(e);i.custom.map_location={x:t.x,y:t.y},this.$store.commit("updateHubData",i),this.drawHub(e,this.contextCoordinate,!1);const s=this.$store.getters.getGadgetListDetectedByOneHub(e);this._.isEmpty(s)&&this.loadGadgets(e)})},_updateHubData(t,e){this.services.updateData(t,window.CONSTANTS.PRODUCT_KIND.HUB,t=>{e(t)})},_updateGadgetData(t,e){this.services.updateData(t,window.CONSTANTS.PRODUCT_KIND.MIBSSKEC,e)},showhubList(t,e){this.services.getHubs(i=>{this.options.items=[];let s='<div class="custom_menu"><div class="plus-symbol"></div>\n                                <div class="addText">Scanner</div>\n                                <div class="additem"></div></div>';if(this.map.setMenu({custom:!0,items:s}).openMenu(t),this._.isEmpty(i)||this._.forEach(i,(t,i)=>{if(this.$store.commit("addHub",t),!this._.has(this.markerMap.hubs,t.id))if(t.custom&&t.custom.map_location)console.debug(`The ${t.name} hub has location data. so skip`);else{let s=document.createElement("div");s.id=`hubitem${i}`,s.innerText=t.name,s.onclick=()=>{e(t.id)},document.getElementsByClassName("additem")[0].appendChild(s)}}),!document.getElementsByClassName("additem")[0].children.length){let t=document.createElement("div");t.className="noScanner",t.innerText="No Scanner",document.getElementsByClassName("additem")[0].appendChild(t)}},function(t){console.warn("Failed to load hub list.")})},drawHub(t,e,i){let s=null,a=this.$store.getters.getHub(t);this._.has(this.markerMap.hubs,t)?this.markerMap.hubs[t]._coordinates.x===e.x||this.markerMap.hubs[t._coordinates.y===e.y]||(s=this.markerMap.hubs[hub.id],s.removeInfoWindow(),s.setCoordinates(e),this.markerMap.hubs[hub.id]=s,this.hasSameGadget(),this.drawWorkers(t,e)):(this.gadgetCount[t]=0,this.zoomLv=this.map.getZoom()/11*50,s=new r["d"]([e.x,e.y],{symbol:{markerFile:`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab1.svg`,markerWidth:this.zoomLv,markerHeight:this.zoomLv},draggable:this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_ADMIN)}).addTo(this.hubLayer),this.markerMap.hubs[t]=s,this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_ADMIN)&&(a.status||s.updateSymbol({markerFile:`${window.CONSTANTS.URL.BASE_IMG}icon-hub1.svg`}),a.custom.map_location={x:e.x,y:e.y},this.$store.commit("updateHubData",a),i||this._updateHubData([a],t=>{this._.isEmpty(t)?this.$store.commit("updateHubData",a):this.sweetbox.fire("Sorry, Hub location update failed")}),s.on("click",()=>{this.showHubInfoWindow(t,s)}),s.on("contextMenu",()=>{s.closeInfoWindow(),this.showContextMenu(t,0,s)}),s.on("dragstart",()=>{s.closeInfoWindow()}),s.on("dragend",e=>{a.custom.map_location={x:e.coordinate.x,y:e.coordinate.y},this.$store.commit("updateHubData",a),this.hasSameGadget(),this.drawWorkers(t,e.coordinate),this._.has(this.hubSetIntervalData,t)||this.setHubTimeOut(t)}),this._.has(a.custom,"is_counted_hub")?a.custom.is_counted_hub&&s.updateSymbol({markerFile:`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab10.svg`}):a.custom.is_counted_hub=!1),this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_NORMAL)?s.on("click",()=>{this.showHubInfoWindow(t,s)}):s.hide())},setHubTimeOut(t){this.hubSetIntervalData[t]=Object(B["setTimeout"])(()=>{var e=this.$store.getters.getHub(t);this.markerMap.hubs[t];this._.has(e.custom,"map_location")&&this._updateHubData([e],e=>{this._.isEmpty(e)?delete this.hubSetIntervalData[t]:this.sweetbox.fire("Sorry, Hub location update failed")})},3e3)},removeHubMarker(t){let e=this.markerMap.hubs[t];this.$store.getters.getdetectedGadgetList;if(this._.isEmpty(e))console.warn(`Failed to remove hub marker, cannot find marker by given id: ${t}`);else{let i=this.$store.getters.getHub(t);this._.isEmpty(i)?console.warn(`Failed to clear hub location, cannot found hub model by given id: ${t}`):(delete i.custom.map_location,delete i.custom.is_counted_hub,this.$store.commit("updateHubData",i),this._updateHubData([i],t=>{this._.isEmpty(t)?this.$store.commit("updateHubData",i):this.sweetbox.fire("Sorry, Hub location update failed")}),console.debug("success to remove hubmarker")),e.remove(),delete this.markerMap.hubs[t],this.removeGadgetMarkersWhenHubIsMoved(t)}this.hasSameGadget(),this._.forEach(this.markerMap.hubs,(t,e)=>{this.drawWorkers(e,this.markerMap.hubs[e]._coordinates)})},showHubInfoWindow(t,e){let i={},s="",a=this.$store.getters.getHub(t);this.$store.getters.getGadgetListDetectedByOneHub(t);this._.isEmpty(this.infoWindow)||this.infoWindow.remove(),this.hubInfoWindow&&(this._.isEqual(this.hubInfoWindow.id===t)||e.removeInfoWindow()),s=a.custom.is_counted_hub?"ON":"OFF",i=this.getHubInfoWindowContent(t),e.setInfoWindow({content:`<div class="worker_menu">\n                        <div class="worker">\n                        <div class="workerId">\n                        <div class="workerkey">SCANNER</div><div class="hubInfo" title="${a.name}">${a.name}</div></div>\n                        <div class="workerValue">\n                        <div class="workerkey">WORKER</div><div class="workerCount" id="worker-info-count">${i.count}</div></div>\n                        <div class="forcount">For Counting</div>\n                        <label class="moi-onoff-toggle-hub">\n                        <input class="moi-toggle-button-hub" type="checkbox">\n                        <span class="moi-toggle-slider-hub round-hub">${s}</span>\n                        </label>\n                        </div>\n                        <div id="worker-info-panel" class="workerInfo">${i.context}</div>\n                        <div class="close-button-custom"></div></div></div>`,width:350,custom:!0,autoPan:!1,dy:-200}),e.openInfoWindow(),this.hubInfoWindow={id:t,item:e._infoWindow},document.getElementsByClassName("moi-toggle-button-hub")[0].checked=!!a.custom.is_counted_hub,document.getElementsByClassName("moi-toggle-button-hub")[0].disabled=!this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_ADMIN),this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_ADMIN)&&(document.getElementsByClassName("moi-toggle-button-hub")[0].onchange=()=>{a.custom.is_counted_hub=!!document.getElementsByClassName("moi-toggle-button-hub")[0].checked;let t=`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab1.svg`;document.getElementsByClassName("moi-toggle-slider-hub")[0].innerText="OFF",a.custom.is_counted_hub&&(document.getElementsByClassName("moi-toggle-slider-hub")[0].innerText="ON",t=`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab10.svg`);let e=this.markerMap.hubs[a.id];e&&e.updateSymbol({markerFile:t}),this._updateHubData([a],t=>{this._.isEmpty(failedList)?this.$store.commit("updateHubData",a):this.sweetbox.fire("Sorry, Hub location update failed")})}),this.registerGadgetHandlerInHubInfoWindow(),_.last(document.getElementsByClassName("close-button-custom")).onclick=()=>{e._infoWindow.remove()}},loadGadgets(t){this.stopDetector(),this.services.getDetectBeaconList([t],t=>{console.log("Sucess to detect gadgets")})},startDetector(){this.beaconDetector.isRunning()||this.beaconDetector.start()},stopDetector(){this.beaconDetector.isRunning()&&this.beaconDetector.stop()},drawWorker(t,e){let i=null,s=[],a=this.$store.getters.getDetectedGadget(t.gid),o="",n=this.zoomLv,d=this.zoomLv;if(this._.isEmpty(a.custom.map_location)?this._.has(this.bcnsData,a.gid)?(this.gadgetCount[t.hid]++,s.push(this.bcnsData[a.gid].marker._coordinates.x,this.bcnsData[a.gid].marker._coordinates.y)):(this.gadgetCount[t.hid]++,s.push(e.x,e.y-this.gadgetCount[t.hid]/10*3)):(this.gadgetCount[t.hid]--,s.push(a.custom.map_location.x,a.custom.map_location.y)),this.bcnsData[a.gid])i=this.bcnsData[a.gid].marker,i.removeInfoWindow(),i.setCoordinates(s),this.bcnsData[a.gid].marker=i;else{let t=`${window.CONSTANTS.URL.BASE_IMG}lostTag.svg`;this._.isEmpty(a.tags)||(o=this._.first(a.tags),t=`${window.CONSTANTS.URL.BASE_IMG}icon-worker${o}-tab.svg`),this._.includes(this.tags.xll,o)?(d*=2,this._.isEqual(o,"8")?n*=3.1:n*=3.7):this._.includes(this.tags.xl,o)?(n*=2,d*=1.6):this._.includes(this.tags.l,o)?(d*=1.4,this._.isEqual(o,"9")||this._.isEqual(o,"11")?n*=1.45:this._.isEqual(o,"4")||this._.isEqual(o,"5")?n*=1.8:n*=1.4):this._.isEqual(o,"17")||this._.isEqual(o,"10")?n*=1.2:(this._.isEqual(o,"12"),n*=1.1),i=new r["d"](s,{symbol:{markerFile:t,markerWidth:n,markerHeight:d}}).addTo(this.workerLayer),this.bcnsData[a.gid]={marker:i,tags:o},i.on("click",()=>{this.showGadgetInFoWindow(a,this.bcnsData[a.gid].marker)}),this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_NORMAL)||a.custom&&!a.custom.is_visible_moi&&i.hide()}this.$store.commit("GadgetIsInMap",a.gid),o&&!this._.includes(this.selectFilteredBeacons,o)&&(i.hide(),this.$store.commit("GadgetIsnotInMap",a.gid))},drawWorkers(t,e){let i=this.$store.getters.getGadgetListDetectedByOneHub(t);this.zoomLv=this.map.getZoom()/11*50,this._.forEach(i,t=>{this.drawWorker(t,e)})},showGadgetInFoWindow(t,e){let i=window.CONSTANTS.GADGET_INFO[this.bcnsData[t.gid].tags],s=this.$store.getters.getdetectedGadgetList[t.gid].hubIdList,a="",o=0;this._.isEmpty(s)||this._.forEach(s,t=>{const e=this.$store.getters.getHub(t);e&&this._.has(e.custom,"map_location")&&(a+=`<div class="scannerName" title="${e.name}">${e.name}</div>`,o++)});let n=`<div class="bcns">\n                        <div class="bcnsInfo1">\n                        <div class="bcnskey1">NAME</div>\n                        <div class="bcnName1" title="${t.name}">${t.name}</div>\n                        <div class="bcnskey1">KIND</div>\n                        <div class="bcnName1" title="${i}">${_.isEmpty(i)?"Not Selected":i}</div>\n                        <div id="${t.gid}name-data" class="scannerData">SCANNER(${o})</div>\n                        <div class="scannerNameList">${a}</div></div>\n                        <div id="${t.gid}loading-panel" class="loading-panel"></div>\n                        <div id="${t.gid}loader" class="loader"><div></div><div></div><div></div><div></div></div>\n                        <img id="${t.gid}img" class="bcnsImg1" src="${window.CONSTANTS.URL.BASE_IMG}item${_.isEmpty(t.tags)?1:_.first(t.tags)}.png"></img>\n                        <div class="close-button-custom"></div></div></div>`;e.setInfoWindow({content:n,width:400,bottom:11,custom:!0,dy:-250,single:!1,autoPan:!1}),this._.isString(t.custom)&&(t.custom={}),e.openInfoWindow();const d=document.getElementById(`${t.gid}name-data`);if(d){const e=document.createElement("div");e.className="beacon-moi-container",e.innerHTML=`<div class="bcnskey1">MOI System</div>\n                    <label class="moi-onoff-toggle beacon">\n                    <input id="${t.gid}moi-button" class="moi-toggle-button beacon" type="checkbox">\n                    <span class="moi-toggle-slider beacon round"></span></label>`,d.before(e),document.getElementById(`${t.gid}moi-button`).disabled=!this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_ADMIN),document.getElementById(`${t.gid}moi-button`).checked=!!t.custom.is_visible_moi}this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_ADMIN)&&(document.getElementById(`${t.gid}moi-button`).onchange=()=>{const e=this.$store.getters.getGadget(t.gid),i=document.getElementById(`${t.gid}moi-button`).checked;e.custom={is_visible_moi:i},console.log(e),this._updateGadgetData([e],()=>{this.$store.commit("updateGadgetMoiData",{id:e.id,isVisible:i}),console.log("Succeed to update gadget data")},t=>{console.log("Failed to update gadget data")})});const c=document.getElementById(`${t.gid}loader`),r=document.getElementById(`${t.gid}loading-panel`);let h=this.$store.getters.getGadget(t.gid).img_url;if(h){let e=document.getElementById(`${t.gid}img`);url&&!this._.isEmpty(e)&&(e.src=url)}c&&(c.remove(),r.remove()),_.last(document.getElementsByClassName("close-button-custom")).onclick=()=>{e.removeInfoWindow()}},removeGadgetMarkersWhenHubIsMoved(t){const e=this.$store.getters.getGadgetListDetectedByOneHub(t);this._.isEmpty(e)||this._.forEach(e,t=>{const e=this.$store.getters.getDetectedGadget(t.gid),i=this._.keys(this.markerMap.hubs),s=this._.intersection(i,e.hubIdList);s.length<=1&&(this.bcnsData[t.gid].marker.remove(),delete this.bcnsData[t.gid],this.$store.commit("removeGadgetLocation",t.gid))})},setGadgetLocation(t){let e={},i={},s={},a=0,o=0,n=0,d=null,c=null,r=0,h=0;e=this._.sortBy(t,["_t"]),e=this._.reverse(e),this._.forEach(e,t=>{let e=this.$store.getters.getHub(t.hid);this._.has(e.custom,"map_location")&&h<2&&(i[t.hid]=this._.clone(e.custom.map_location),i[t.hid].dist=t.dist,i[t.hid].gid=t.gid,h++)}),2===this._.size(i)&&(this._.forEach(i,(t,e)=>{0===r?d=t:c=t,this.isNumber(t.dist)&&(n+=t.dist),r++}),this._.inRange(Math.abs(d.y-c.y),9,13)?this._.inRange(d.y,48,72)&&(c.x>d.x?(a=(d.x+2*c.x)/3,o=(c.y+2*d.y)/3):(a=(c.x+2*d.x)/3,o=(d.y+2*c.y)/3)):(a=(d.x*c.dist+c.x*d.dist)/n,o=(d.y*c.dist+c.y*d.dist)/n)),this._.isEqual(a,0)||(this._.forEach(i,(t,e)=>{s={hid:e,gid:t.gid,x:a,y:o,zoomLv:this.map.getZoom()/11*25}}),this.$store.commit("addGadgetLocation",s))},hasSameGadget(){const t=this.$store.getters.getdetectedGadgetList,e={},i=this._.keys(this.markerMap.hubs);this._.forEach(t,(t,s)=>{const a=this._.intersection(i,t.hubIdList);a.length>1?(e[s]={},e[s]=a):1===a.length&&this.$store.commit("removeGadgetLocation",s)});let s=this._.keys(e).length;s>0&&this._.forEach(e,(t,e)=>{var i=this.$store.getters.getHubListDetectOneGadget(e);this.setGadgetLocation(i)})},handleAddIPCam(t){this.showIpCamList(t,t=>{this.map.closeMenu(t),this.drawIpcam(t,this.contextCoordinate,!1)})},showIpCamList(t,e){this.services.getIpcams(i=>{this.$store.commit("addIpcams",i),this.options.items=[];let s='<div class="custom_menu"><div class="plus-symbol"></div>\n                                <div class="addText">IPCAM</div>\n                                <div class="additem"></div></div>';if(this.map.setMenu({custom:!0,items:s}).openMenu(t),this._.isEmpty(i)||this._.forEach(i,(t,i)=>{if(!this._.has(this.markerMap.cams,t.id))if(t.custom&&t.custom.map_location)console.debug(`The ${t.name} cam has location data. so skip`);else{let s=document.createElement("div");s.id=`camitem${i}`,s.innerText=t.name,s.onclick=()=>{e(t.id)},document.getElementsByClassName("additem")[0].appendChild(s)}}),!document.getElementsByClassName("additem")[0].children.length){let t=document.createElement("div");t.className="noIpcam",t.innerText="No Ipcam",document.getElementsByClassName("additem")[0].appendChild(t)}},function(t){console.warn("Failed to load cam list.")})},drawIpCams(t,e){this._.forEach(t,t=>{this._.isEmpty(t.custom)||this._.isEmpty(t.custom.map_location)||this.drawIpcam(t.id,t.custom.map_location,e)})},drawIpcam(t,e,i){let s=null;var a=this.$store.getters.getIpCam(t);this.zoomLv=this.map.getZoom()/11*50;let o=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-default.svg`;a.custom.is_visible_moi&&(o=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-checked.svg`),_.has(this.markerMap.cams,t)?this.markerMap.cams[t]._coordinates.x!==e.x&&this.markerMap.cams[t]._coordinates.y!==e.y&&(s=this.markerMap.cams[t],s.removeInfoWindow(),s.setCoordinates(e)):(s=new r["d"]([e.x,e.y],{symbol:{markerFile:o,markerWidth:this.zoomLv,markerHeight:this.zoomLv},draggable:this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_ADMIN)}).addTo(this.camLayer),s.on("click",()=>{s.closeInfoWindow(),this.showIpcamWindow(t,s)}),this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_NORMAL)?this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_ADMIN)&&(s.on("contextmenu",()=>{s.closeInfoWindow(),this.showContextMenu(t,1,s)}),s.on("dragstart",()=>{s.closeInfoWindow()}),s.on("dragend",e=>{a.custom.map_location={x:e.coordinate.x,y:e.coordinate.y},this.$store.commit("updateIpcamData",a),this._.has(this.ipcamSetIntervalData,t)||this.setIpcamTimeOut(t)}),a.custom.map_location={x:e.x,y:e.y},i||this._updateIpcamData([a],t=>{t&&this.sweetbox.fire("Sorry, Ipcam location update failed"),this.$store.commit("updateIpcamData",a)})):a.custom&&!a.custom.is_visible_moi&&s.hide()),this.markerMap.cams[t]=s},setIpcamTimeOut(t){this.ipcamSetIntervalData[t]=Object(B["setTimeout"])(()=>{var e=this.$store.getters.getIpCam(t);this.markerMap.cams[t];this._.has(e.custom,"map_location")&&this._updateIpcamData([e],e=>{this._.isEmpty(e)?delete this.ipcamSetIntervalData[t]:this.sweetbox.fire("Sorry, Ipcam location update failed")})},3e3)},showIpcamWindow(t,e){let i=this.$store.getters.getIpCam(t),s=null;if(this._.isEmpty(this.infoWindow)||this.infoWindow.remove(),this._.isEmpty(i)?s+="UNKNOWN":s=i.name,e.setInfoWindow({content:`<div class="ipcam_menu">\n                    <div id="ipcam-main-container" class="ipcam-container">\n                    <div class="ipcamId">\n                    <div class="ipcamKey">IPCAM</div><div class="ipcamInfo" title="${s}">${s}</div></div>\n                    </div><div class="ipcam-right-panel">\n                    </div><div class="bottom-shape"></div><div class="close-button"></div></div>`,custom:!0,dy:-403,autoPan:!1,single:!1}),e.openInfoWindow(),this.isShowingByStage(window.CONSTANTS.USER_STAGE.SK_ADMIN)){const t=document.getElementById("ipcam-main-container");if(t){const e=document.createElement("div");e.innerHTML='<div class="moi">MOI System</div>\n                        <label class="moi-onoff-toggle">\n                        <input class="moi-toggle-button" type="checkbox">\n                        <span class="moi-toggle-slider round"></span></label>',t.append(e),document.getElementsByClassName("moi-toggle-button")[0].checked=!!i.custom.is_visible_moi,document.getElementsByClassName("moi-toggle-button")[0].onchange=()=>{i.custom.is_visible_moi=document.getElementsByClassName("moi-toggle-button")[0].checked;let t=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-default.svg`;i.custom.is_visible_moi&&(t=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-checked.svg`);let e=this.markerMap.cams[i.id];e&&e.updateSymbol({markerFile:t}),this._updateIpcamData([i],()=>{this.$store.commit("updateIpcamData",i)})}}}var a="vxg_media_player"+(new Date).getTime(),o=document.createElement("div");o.setAttribute("id",a),o.setAttribute("class","mediaplayer vxgplayer");var n=document.getElementsByClassName("ipcam-right-panel")[0];n.appendChild(o);let d="";this._.isEmpty(i.custom)||(d=`rtsp://${i.custom.id}:${i.custom.password}@${i.custom.ip}`),vxgplayer(a,{url:d,width:600,height:335,controls:!0,nmf_path:"media_player.nmf",nmf_src:"static/libs/mediaplayer/pnacl/Release/media_player.nmf"}).ready(function(){console.log(" =>ready player "+a),vxgplayer(a).src(d),vxgplayer(a).play(),console.log(" <=ready player "+a)});var c=vxgplayer(a);c.onError(function(t){console.warn("error",t.error())}),this.ipcamInfoWindow=e._infoWindow,_.last(document.getElementsByClassName("close-button")).onclick=()=>{e.removeInfoWindow()}},removeIpcamMarker(t){let e=this.markerMap.cams[t];if(this._.isEmpty(e))console.warn(`Failed to remove ipcam marker, cannot find ipcam by given id: ${t}`);else{let i=this.$store.getters.getIpCam(t);this._.isEmpty(i)?console.warn(`Failed to clear ipcam location, cannot found ipcam model by given id: ${t}`):this._updateIpcamData([i],s=>{this._.isEmpty(s)||(delete i.custom.map_location,e.remove(),delete this.markerMap.cams[t])})}},_updateIpcamData(t,e){this.services.updateData(t,window.CONSTANTS.PRODUCT_KIND.IPCAM,t=>{e(t)})},refilterBeacons(){this._.forEach(this.bcnsData,(t,e)=>{this._.includes(this.selectFilteredBeacons,this._.first(t.tags))||(this.bcnsData[e].marker.show(),this.$store.commit("GadgetIsInMap",e))}),this.selectFilteredBeacons=this._.keys(window.CONSTANTS.GADGET_INFO)},bgChangeWorkerTab(t){this.setFilteredBeacons(),document.getElementsByClassName(`filterCheckbox${t}`)[0].onchange=()=>{this.bgChangeWorker(t)}},bgChangeWorker(t){this.setFilteredBeacons(),document.getElementsByClassName(`filterCheckbox${t}`)[0].onchange=()=>{this.bgChangeWorkerTab(t)}},setFilteredBeacons(t,e){this._.forEach(this.bcnsData,(i,s)=>{i.tags===t&&(e?(this.$store.commit("GadgetIsInMap",s),i.marker.show()):(this.$store.commit("GadgetIsnotInMap",s),i.marker.hide()))})},filterBeacons(){let t='<div class="filter_menu"><div>';var e=this.map.getCenter(),i={};e.y-=3,this._.forEach(this.gadgetInfoNumber,e=>{t+=`<label class="filterImg">\n                            <img id="worker${e}" class="workerImg" src="${window.CONSTANTS.URL.BASE_IMG}icon-worker${e}-tab.svg">\n                            <input class="filter-checkbox" id ="filterCheckbox${e}" type="checkbox"></label>`}),t+='</div>\n                    <div class="controlContainer">\n                    <button id="reset" class="reset">Reset</button>\n                    </div><div class="close-button-filter"></div>\n                    </div>',i={autoPan:!1,autoCloseOn:!0,autoOpenOn:!0,content:t,custom:!0,dy:-90*this.map.getZoom()},this.filterWindow=new r["f"].InfoWindow(i),this.filterWindow.addTo(this.map).show(e),document.getElementById("clickbtnPlus").onclick=()=>{this.filterWindow&&this.filterWindow.remove()},document.getElementById("clickbtnMinus").onclick=()=>{this.filterWindow&&this.filterWindow.remove()},document.getElementsByClassName("reset")[0].onclick=()=>{this.refilterBeacons(),this.filterWindow&&(this.filterWindow.hide(),this.filterWindow.remove()),this.filterWindow=null},document.getElementsByClassName("close-button-filter")[0].onclick=()=>{this.filterWindow&&this.filterWindow.remove(),this.filterWindow=null},this._.forEach(this.gadgetInfoNumber,t=>{document.getElementById(`filterCheckbox${t}`).checked=!!this._.includes(this.selectFilteredBeacons,t),document.getElementById(`filterCheckbox${t}`).onchange=()=>{const e=document.getElementById(`filterCheckbox${t}`).checked;e?this.selectFilteredBeacons.push(t):this.selectFilteredBeacons=this._.without(this.selectFilteredBeacons,t),this.setFilteredBeacons(t,e)}})},choiceFilter(){this.sweetbox.fire({titleText:"Choose the item to filter",html:'<button id="filterItemGadget" class="filterGadgetIcon"></button><button id="filterItemHub" class="filterHubIcon"></button><button id="filterItemIpcam" class="filterIpcamIcon"></button>',showCancelButton:!1,showConfirmButton:!0,confirmButtonColor:"#3085d6",showCloseButton:!0,width:450}),document.getElementsByClassName("filterHubIcon")[0].onclick=()=>{0===this.hubFilterOn?(this.hubLayer.hide(),this.hubFilterOn=1):(this.hubLayer.show(),this.hubFilterOn=0),1===this.hubFilterOn?document.getElementsByClassName("filterHubIcon")[0].classList.add("hubFilterOn"):document.getElementsByClassName("filterHubIcon")[0].classList.remove("hubFilterOn")},document.getElementsByClassName("filterGadgetIcon")[0].onclick=()=>{this.filterBeacons(),this.sweetbox.close()},document.getElementsByClassName("filterIpcamIcon")[0].onclick=()=>{0===this.ipcamFilterOn?(this.camLayer.hide(),this.ipcamFilterOn=1):(this.camLayer.show(),this.ipcamFilterOn=0),1===this.ipcamFilterOn?document.getElementsByClassName("filterIpcamIcon")[0].classList.add("ipcamFilterOn"):document.getElementsByClassName("filterIpcamIcon")[0].classList.remove("ipcamFilterOn")}},filterHub(){this.sweetbox.mixin({confirmButtonText:"Next &rarr;",showCancelButton:!0,progressSteps:["1","2"]}).queue([{title:"Choose the Tunnel",html:'<div class="selectTn">\n                            <input type="checkbox">\n                            <label id="tn">Tunnel 1</label></div>\n                            <div class="selectTn">\n                            <input type="checkbox">\n                            <label id="tn">Tunnel 2</label></div>\n                            <div class="selectTn">\n                            <input type="checkbox">\n                            <label id="tn">Tunnel 3</label>\n                                </div>'},{title:"Choose the Depths",html:'<div class="selectDepth">\n                            <input type="checkbox">\n                            <label id="dpth">Tunnel 1</label></div>\n                            <div class="selectDepth">\n                            <input type="checkbox">\n                            <label id="dpth">Tunnel 2</label></div>\n                            <div class="selectDepth">\n                            <input type="checkbox">\n                            <label id="dpth">Tunnel 3</label>\n                                </div>'}]).then(t=>{t.value&&Swal.fire({title:"",html:"",confirmButtonText:""})})},showLoading(){this.$emit("map-load",!0)},hideLoading(){this.$emit("map-load",!1)},showContextMenu(t,e,i){var s="",a="",o=null;switch(e){case window.CONSTANTS.CONTEXT_TYPE.SCANNER:var n=this.$store.getters.getHub(t);s="Scanner",n&&(a=n.name),o=this.removeHubMarker;break;case window.CONSTANTS.CONTEXT_TYPE.IPCAM:var d=this.$store.getters.getIpCam(t);s="IPCam",d&&(a=d.name),o=this.removeIpcamMarker;break}i.setMenu({items:`<div class="context-menu-container ${s.toLowerCase()}">\n                    <div class="context-menu-top-panel"><div class="context-menu-text-wrapper">\n                    <div class="context-menu-type-text">${s}</div>\n                    <div class="context-menu-name-text">${a}</div></div></div>\n                    <div class="context-menu-bottom-panel">\n                    <div id="move-button" class="context-menu-button-frame ${s.toLowerCase()}"><div class="context-menu-button-panel">\n                    <div id="move-button-text" class="context-menu-button-text">${"Move "+s.toLowerCase()}</div></div></div>\n                    <div id="remove-button" class="context-menu-button-frame ${s.toLowerCase()}"><div class="context-menu-button-panel">\n                    <div id="remove-button-text" class="context-menu-button-text">${"Remove "+s.toLowerCase()}</div></div></div></div></div>`,width:350,custom:!0,dy:-120,animation:"fade",dx:-90}).openMenu(),document.getElementById("remove-button").onclick=function(){o(t),i.closeMenu()}},removeItems(){this.sweetbox.fire({title:"Are you sure?",text:"You won't be able to revert this!",width:230,showCloseButton:!0,showCancelButton:!0,reverseButtons:!0,cancelButtonColor:"#d33"}).then(t=>{t.value&&(this.removeHubItems(),this.removeGadgetItems(),this.removeIpcamItems())})},removeHubItems(){let t=[];this._.forEach(this.markerMap.hubs,(e,i)=>{let s=this.$store.getters.getHub(i);t.push(s)}),this._updateHubData(t,t=>{const e=this._.keys(this.markerMap.hubs),i=this._.xor(e,t);this._.forEach(i,t=>{marker.remove(),hub.custom={},this.$store.commit("updateHubData",hub),this.markerMap.hubs[t]={},console.debug("Succeed to remove hub data ID: ",t)})})},removeGadgetItems(){this.bcnsData&&this._.forEach(this.bcnsData,(t,e)=>{t.marker.remove(),this.$store.commit("removeGadgetLocation",e)}),this.bcnsData={}},removeIpcamItems(){let t=this.$store.getters.getIpCams;t&&this._.forEach(t,t=>{this.removeIpcamMarker(t.id)})},getHubInfoWindowContent(t){const e=this.$store.getters.getGadgetListDetectedByOneHub(t);let i="",s=0;return this._.forEach(e,t=>{var e=this.$store.getters.getdetectedGadgetName(t.gid);if(e){const a=new Date(1e3*t._t).toLocaleTimeString("eu");i+=`<div class="workerInfo-content" id="${t.gid}">\n                                <div class="workerInfo-wrapper">\n                                <div class="workerInfo-name">${e}</div>\n                                <span class="workerInfo-time">Today ${a}</span></div></div>`,s++}}),s<1&&(i='<div class="workerInfo-empty">Theres no hub to load</div>'),{context:i,count:s}},registerGadgetHandlerInHubInfoWindow(){if(this.hubInfoWindow){const t=this.$store.getters.getGadgetListDetectedByOneHub(this.hubInfoWindow.id);this._.forEach(t,t=>{const e=document.getElementById(t.gid);if(e){const i=this.$store.getters.getdetectedGadgetList[t.gid];e.onclick=()=>{this.showGadgetInFoWindow(i,this.bcnsData[t.gid].marker)}}})}},isShowingByStage(t){return this.info.stage<=t},_handleAdded(t){this.isScanner(t.kind)?this.$store.commit("addhub",t.v):this.isIpcam(t.kind)?this.$store.commit("addIpcams",t.v):this.$store.commit("addDetectedGadget",t.v)},_handleUpdated(t){this.isScanner(t.kind)?(this.$store.commit("updateHubData",t.v),this._handleUpdatedHub(t.v)):this.isIpcam(t.kind)?(this.$store.commit("updateIpcamData",t.v),this._handleUpdatedIpcam(t.v)):this.$store.commit("updateGadgetData",t.v)},_handleUpdatedHub(t){this._.has(this.markerMap.hubs,t.id)?this._.isEmpty(t.custom)?this.removeHubMarker(t.id):this._.isEmpty(t.custom)||this._.isEmpty(t.custom.map_location)||this.drawHub(t.id,t.custom.map_location,!0):this._.isEmpty(t.custom)||this._.isEmpty(t.custom.map_location)||this.loadGadgets(()=>{this.drawHub(t.id,t.custom.map_location,!0)})},_handleUpdatedIpcam(t){this._.has(this.markerMap.cams,t.id)&&this._.isEmpty(t.custom)?this.removeIpcamMarker(t.id):this._.isEmpty(t.custom)||this._.isEmpty(t.custom.map_location)||this.drawIpcam(t.id,t.custom.map_location,!0)},_handleUpdatedBeacon(t){if(this._.has(this.bcnsData,t.id)){let e=`${window.CONSTANTS.URL.BASE_IMG}lostTag.svg`;this._.isEmpty(t.tags)||(e=`${window.CONSTANTS.URL.BASE_IMG}icon-worker${this._.first(t.tags)}-tab.svg`),this.bcnsData[t.id].marker.updateSymbol({markerFile:e})}this._.has(this.bcnsData,t.id)},_handleRemoved(t){this.isScanner(t.kind)?this.$store.commit("removeHubs",t.v.id):this.isIpcam(t.kind)?this.$store.commit("removeIpcam",t.v.id):this.$store.commit("removeGadget",t.v.id)},_handleDetectedGadgets(t){const e=t.v;this._.forEach(this.gadgetCount,(t,e)=>{this.gadgetCount[e]=0}),this._.forEach(e,t=>{const e=this.markerMap.hubs[t.hid];(!this._.has(this.lastUpdatedData,t.gid)||this.lastUpdatedData[t.gid]<t._t)&&(this.lastUpdatedData[t.gid]=t._t),this.$store.commit("addDetectedHubGadget",t),this.hasSameGadget(),e&&this.drawWorker(t,e._coordinates)})}},computed:{isEmptyUrl(){return this._.isEmpty(this.mapUrl)}},created(){this.$emit("select-button"),st.$on("zoomIn",()=>{this.map.zoomIn(7)}),st.$on("zoomOut",()=>{this.map.zoomOut(6)}),st.$on("filter",()=>{this.choiceFilter()}),st.$on("removeItem",()=>{this.removeItems()}),this.services.subscribe({added:t=>{this._handleAdded(t)},updated:t=>{this._handleUpdated(t)},removed:t=>{this._handleRemoved(t)},getDetectedList:t=>{this._handleDetectedGadgets(t)}}),window.addEventListener("beforeunload",()=>{this.services.unsubscribe()})},mounted(){this.initloadMap()},mixins:[L]},x=G,H=(i("54d9"),i("2877")),R=Object(H["a"])(x,d,c,!1,null,null,null),U=R.exports,W=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{attrs:{id:"topContainer"}},[i("div",{attrs:{id:"leftContainer"}},[i("div",{attrs:{id:"zoom"}},[i("img",{attrs:{id:"clickbtnPlus",src:"static/location/imgs/icon-plus.svg"},on:{click:t.zoomIn}}),i("img",{attrs:{id:"clickbtnMinus",src:"static/location/imgs/icon-minus.svg"},on:{click:t.zoomOut}})]),t.isShowingByStage(1)?i("div",{attrs:{id:"filter"}},[i("img",{attrs:{id:"clickbtnFilter",src:"static/location/imgs/icon-filter.svg"},on:{click:t.filter}})]):t._e(),t.isShowingByStage(0)?i("div",{attrs:{id:"remove"}},[i("div",{attrs:{id:"removebtn"},on:{click:t.remove}})]):t._e()]),t.isShowingByStage(0)?i("div",{attrs:{id:"rightContainer"}},[i("div",{attrs:{id:"upload"}},[i("button",{attrs:{id:"clickbtn"},on:{click:function(e){return t.$refs.file.click()}}},[t._m(0)]),i("input",{ref:"file",attrs:{type:"file",id:"file",accept:"image/jpeg, image/png, image/gif"},on:{change:t.onFileChange}})])]):t._e()])},F=[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{attrs:{id:"btntitle"}},[t._v("Upload "),i("i",{staticClass:"fa fa-upload"})])}],P={name:"Top",props:{info:{type:Object,default:{}}},methods:{zoomIn(){st.$emit("zoomIn")},zoomOut(){st.$emit("zoomOut")},onFileChange(t){this.file=t.target.files[0],this.submitFile()},getMapFile(t){this.services.getMapFile},remove(){st.$emit("removeItem")},submitFile(){this.services.postMapFile(this.file,t=>{window.location.reload()},t=>{console.warn("File upload failed")})},handleFileUpload(){this.file=this.$refs.file.files[0]},filter(){st.$emit("filter")},isShowingByStage(t){return this.info.stage<=t}},computed:{isEmptyUrl(){return!this.url}},created(){this.getMapFile()}},z=P,K=(i("dee7"),Object(H["a"])(z,W,F,!1,null,null,null)),q=K.exports,j={components:{Map:U,Top:q},data(){return{isLoaded:!1,isWebsocketConnected:!1,info:{}}},methods:{handleMapLoad(t){this.isLoaded=t}},created(){this.services.getInfo(t=>{this._.isObject(t)&&(this.info=t,this.services.websocketConnect(`${window.location.protocol}//${window.location.host}`,5555,()=>{this.isWebsocketConnected=!0,console.log("Connect")},()=>{console.log("Disconnect")},()=>{console.log("Error")}))})}},V=j,Y=(i("034f"),Object(H["a"])(V,o,n,!1,null,null,null)),Z=Y.exports,Q=i("415c"),J=i.n(Q),X=(i("5453"),i("2f62"));i("3e8f");a["a"].use(X["a"]);var tt=new X["a"].Store({state:{hubs:{},gadgets:{},detectedgadgets:{},ipcams:{},hubListDetectOneGadget:{},gadgetListDetectedByOneHub:{}},getters:{getHubs:t=>{return _.values(t.hubs)},getHub:t=>e=>{return _.isEmpty(t.hubs[e])?"":t.hubs[e]},getdetectedGadgetList:t=>{return t.detectedgadgets},getDetectedGadget:t=>e=>{if(!_.isEmpty(t.detectedgadgets[e]))return t.detectedgadgets[e];console.warn(`Theres no deteacted gadget data in gadget id ${e}`)},getGadget:t=>e=>{if(!_.isEmpty(t.gadgets[e]))return t.gadgets[e];console.warn(`Theres no gadget data in gadget id ${e}`)},getdetectedGadgetName:t=>e=>{return t.detectedgadgets[e]?t.detectedgadgets[e].name:""},getIpCams:t=>{return _.values(t.ipcams)},getIpCam:t=>e=>{if(t.ipcams[e])return t.ipcams[e];console.warn(`Theres no ipcam data in ipcam id ${e}`)},getHubListDetectOneGadget:t=>e=>{return t.hubListDetectOneGadget[e]?t.hubListDetectOneGadget[e]:{}},getGadgetListDetectedByOneHub:t=>e=>{return t.gadgetListDetectedByOneHub[e]?t.gadgetListDetectedByOneHub[e]:{}}},mutations:{addHub(t,e){t.hubs[e.id]&&(t.hubs[e.id]={}),t.hubs[e.id]=e},addDetectedGadget(t,e){_.forEach(e,e=>{_.isString(e.custom)&&(e.custom={}),t.gadgets[e.id]=e})},addDetectedHubGadget(t,e){if(_.has(t.gadgets,e.gid)){let i=t.gadgets[e.gid];_.isEmpty(t.detectedgadgets[e.gid])&&(t.detectedgadgets[e.gid]={gid:i.id,hubIdList:[],name:i.name,dist:e.dist,uuid:i.beacon_spec.uuid,major:i.beacon_spec.major,minor:i.beacon_spec.minor,custom:_.isObject(i.custom)?i.custom:{},tags:i.tags,view:0,account_id:i.account_id}),_.isEmpty(t.detectedgadgets[e.gid].hubIdList.find(t=>t===e.hid))&&t.detectedgadgets[e.gid].hubIdList.push(e.hid)}_.has(t.hubListDetectOneGadget,e.gid)||(t.hubListDetectOneGadget[e.gid]={}),_.has(t.hubListDetectOneGadget[e.gid],e.hid)?e._t>t.hubListDetectOneGadget[e.gid][e.hid]._t&&(t.hubListDetectOneGadget[e.gid][e.hid]=e):t.hubListDetectOneGadget[e.gid][e.hid]=e,_.has(t.gadgetListDetectedByOneHub,e.hid)||(t.gadgetListDetectedByOneHub[e.hid]={}),_.has(t.gadgetListDetectedByOneHub[e.hid],e.gid)?e._t>t.gadgetListDetectedByOneHub[e.hid][e.gid]._t&&(t.gadgetListDetectedByOneHub[e.hid][e.gid]=e):t.gadgetListDetectedByOneHub[e.hid][e.gid]=e},updateHubData(t,e){t.hubs[e.id]&&(t.hubs[e.id]=e)},updateGadgetMoiData(t,e){t.detectedgadgets[e.id]&&(t.detectedgadgets[e.id].custom.is_visible_moi=e.isVisible,t.gadgets[e.id].custom.is_visible_moi=e.isVisible)},updateGadgetData(t,e){t.gadgets[e.id]&&(t.gadgets[e.id]=e)},removeGadgetLocation(t,e){t.detectedgadgets[e]&&t.gadgets[e]&&(t.detectedgadgets[e].custom.map_location={},t.gadgets[e].custom.map_location={})},addGadgetLocation(t,e){let i=t.gadgets[e.gid],s=t.detectedgadgets[e.gid];i&&s&&(i.custom.map_location=_.pick(e,["x","y"]),s.custom.map_location=_.pick(e,["x","y"]))},GadgetIsInMap(t,e){t.detectedgadgets[e]&&(t.detectedgadgets[e].view=window.CONSTANTS.HUB_VIEW.IN_MAP)},GadgetIsnotInMap(t,e){_.isEmpty(t.detectedgadgets[e])||(t.detectedgadgets[e].view=window.CONSTANTS.HUB_VIEW.NOT_IN_MAP)},removeGadgets(t){_.forEach(t.gadgets,(e,i)=>{t.gadgets[i]={},a["a"].delete(t.gadgets,i)})},removeGadget(t){t.gadgets[gid]={},a["a"].delete(t.gadgets,gid)},removeHub(t,e){t.hubs[e]={},a["a"].delete(t.hubs,e)},removeIpcam(t,e){t.ipcams[e]={},a["a"].delete(t.ipcams,e)},addIpcams(t,e){_.forEach(e,e=>{t.ipcams[e.id]=e})},addIpcam(t,e){t.ipcams[e.id]=e},updateIpcamData(t,e){t.ipcams[e.id]&&(t.ipcams[e.id]=e)}}}),et=i("3d20"),it=i.n(et);i("1aa9");i.d(e,"EventBus",function(){return st}),a["a"].prototype.$http=l.a,a["a"].prototype.services=s,a["a"].prototype.sweetbox=it.a,a["a"].config.productionTip=!1;const st=new a["a"]({});a["a"].use(J.a),new a["a"]({store:tt,render:t=>t(Z)}).$mount("#locationTracking")},"64a9":function(t,e,i){},b347:function(t,e,i){},dee7:function(t,e,i){"use strict";var s=i("1d68"),a=i.n(s);a.a}});
//# sourceMappingURL=app.d3219616.js.map
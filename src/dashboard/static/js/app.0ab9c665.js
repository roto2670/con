(function(t){function e(e){for(var s,n,d=e[0],c=e[1],r=e[2],h=0,m=[];h<d.length;h++)n=d[h],o[n]&&m.push(o[n][0]),o[n]=0;for(s in c)Object.prototype.hasOwnProperty.call(c,s)&&(t[s]=c[s]);l&&l(e);while(m.length)m.shift()();return a.push.apply(a,r||[]),i()}function i(){for(var t,e=0;e<a.length;e++){for(var i=a[e],s=!0,d=1;d<i.length;d++){var c=i[d];0!==o[c]&&(s=!1)}s&&(a.splice(e--,1),t=n(n.s=i[0]))}return t}var s={},o={app:0},a=[];function n(e){if(s[e])return s[e].exports;var i=s[e]={i:e,l:!1,exports:{}};return t[e].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=s,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)n.d(i,s,function(e){return t[e]}.bind(null,s));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/";var d=window["webpackJsonp"]=window["webpackJsonp"]||[],c=d.push.bind(d);d.push=e,d=d.slice();for(var r=0;r<d.length;r++)e(d[r]);var l=c;a.push([0,"chunk-vendors"]),i()})({0:function(t,e,i){t.exports=i("56d7")},"034f":function(t,e,i){"use strict";var s=i("64a9"),o=i.n(s);o.a},"1aa9":function(t,e){window.CONSTANTS={HUB_VIEW:{NOT_IN_MAP:0,IN_MAP:1},URL:{BASE_IMG:"static/location/imgs/",YOUR_CLOUD:"https://c2.prota.space",CONSOLE:""},GADGET_INFO:{1:"JUMBO DRILL(2B)",2:"JUMBO DRILL(3B)",3:"CHARGING CAR",4:"WHEEL LOADER",5:"DUMP TRUCK",6:"EXCAVATOR(WHEEL)",7:"EXCAVATOR(CRAWLER)",8:"SHOTCRETE MACHINE",9:"JCB",10:"CORE DRILLING MACHINE",11:"DOZER",12:"GROUTING MACHINE",13:"MAI PUMP",14:"MOBILE PRODUCTION UNIT",15:"CHARGING PUMP UNIT",16:"BUS",17:"WCBH DRILLING MACHINE",18:"Explosive Van",19:"Concrete Mixer Truck"},MINIMUM_NUMBER:{HUB:1,FILTERED_BEACONS:16},CONTEXT_TYPE:{SCANNER:0,IPCAM:1}}},"1d68":function(t,e,i){},"54d9":function(t,e,i){"use strict";var s=i("b347"),o=i.n(s);o.a},"56d7":function(t,e,i){"use strict";i.r(e);var s={};i.r(s),i.d(s,"updateIpcamData",function(){return u}),i.d(s,"updateHubData",function(){return g}),i.d(s,"getInfo",function(){return p}),i.d(s,"getIpcams",function(){return v}),i.d(s,"getHubs",function(){return f}),i.d(s,"getHubListConnectedToGadget",function(){return w}),i.d(s,"getBeacons",function(){return I}),i.d(s,"getDetectBeaconList",function(){return E}),i.d(s,"getGadget",function(){return C}),i.d(s,"getMapFiles",function(){return T}),i.d(s,"getBeaconImg",function(){return k}),i.d(s,"postMapFile",function(){return N});var o={};i.r(o),i.d(o,"BeaconDetector",function(){return O});var a=i("2b0e"),n=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{attrs:{id:"locationTracking"}},[i("div",{directives:[{name:"show",rawName:"v-show",value:t.isLoaded,expression:"isLoaded"}],staticClass:"loading"},[t._m(0)]),i("Top"),i("Map",{on:{"map-load":t.handleMapLoad}})],1)},d=[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"main-loader"},[i("div"),i("div"),i("div"),i("div")])}],c=function(){var t=this,e=t.$createElement,i=t._self._c||e;return t.isEmptyUrl?i("div",{attrs:{id:t.id}}):t._e()},r=[],l=i("ec60"),h=i("bc3a"),m=i.n(h);i("f654");const u=(t,e,i)=>{m.a.post(window.CONSTANTS.URL.CONSOLE+"/dash/cam/location",{cam:t},{headers:{"Content-Type":"application/json"}}).then(i=>{console.debug(`Sucess to post cam location in id ${t.id}`),e()}).catch(t=>{i()})},g=(t,e,i)=>{m.a.post(window.CONSTANTS.URL.CONSOLE+"/dash/hubs/update",{hub:t},{headers:{"Content-Type":"application/json"}}).then(t=>{e()}).catch(t=>{i()})},p=t=>{m()({url:window.CONSTANTS.URL.CONSOLE+"/dash/location/info",method:"GET",responseType:"text"}).then(e=>{e.data?t(e.data):(console.log("File is not exist"),t())}).catch(e=>{console.warn("Failed to get info ",e),t()})},b=t=>{m()({url:window.CONSTANTS.URL.CONSOLE+"/dash/cam/list/ipcam",method:"GET",responseType:"text"}).then(e=>{e.data?(e.data>=30&&b(t),t(e.data)):(console.log("Ipcam does not exist"),t([]))}).catch(e=>{console.warn("Failed to get ipCams",e),t([])})},v=t=>{b(t)},f=t=>{m()({url:window.CONSTANTS.URL.CONSOLE+"/dash/scanner/list",method:"GET",responseType:"text"}).then(e=>{e.data?t(e.data):(console.log("File is not exist"),t([]))}).catch(e=>{console.warn("Failed to get hubs ",e),t([])})},w=(t,e)=>{m()({url:window.CONSTANTS.URL.CONSOLE+"/dash/hubs/detected/"+t,method:"GET",responseType:"text"}).then(t=>{const i=t.data;i&&_.isArray(i.data)?e(i):(console.log("fail to load connectedGadget"),e({}))}).catch(t=>{console.warn("Failed to get hub list connected to gadget ",t),e({})})},I=(t,e)=>{m()({url:window.CONSTANTS.URL.CONSOLE+"/dash/beacons/list/"+t,method:"GET",responseType:"text"}).then(t=>{t.data?e(t.data):(console.log("beacon is not exist"),e([]))}).catch(t=>{console.warn("Failed to get beacons ",t),e([])})},y=(t,e,i)=>{m()({url:window.CONSTANTS.URL.CONSOLE+"/dash/beacons/detected/"+t,method:"GET",responseType:"text"}).then(s=>{const o=s.data;o&&_.isArray(o.data)?(o.data.length>=30&&y(t,e,i),e(o.data)):i("not exist")}).catch(t=>{i(t)})},E=(t,e,i)=>{y(t,e,i)},C=(t,e,i)=>{m()({url:window.CONSTANTS.URL.CONSOLE+"/dash/beacons/"+t,method:"GET",responseType:"text"}).then(s=>{s.data?e(s.data):i(`Failed to get gadget, id: ${t}`)}).catch(t=>{i(t)})},T=t=>{const e=window.CONSTANTS.URL.BASE_IMG+"map.png";m()({url:window.CONSTANTS.URL.CONSOLE+"/dashboard/location/view",method:"GET",responseType:"text"}).then(i=>{i.data?(console.log("Success to Get map image file"),t(window.location.protocol+"//"+window.location.host+i.data)):(console.log("Sorry, Img file does not exist"),t(e))}).catch(i=>{console.warn("Failed to get map file ",i),t(e)})},k=(t,e,i)=>{var s=window.CONSTANTS.URL.YOUR_CLOUD+"/mib/v1/sense/"+t;m()({method:"GET",headers:{},url:s}).then(t=>{t&&t.data?e(t.data.v.img_url):i()}).catch(t=>{i(t)})},N=(t,e,i)=>{let s=new FormData;t?(s.append("file",t),m.a.post(window.CONSTANTS.URL.CONSOLE+"/dashboard/location/upload",s,{headers:{"Content-Type":"multiart/form-data"}}).then(t=>{console.log("Success to Upload map image file"),e("http://"+window.location.host+t.data)}).catch(t=>{i(t)})):i()};let L=null;class O{constructor(t,e,i){if(L)return L;this._timers=[],this.isRunning=!1,this._vm=t,this._detectedCallback=e||function(){},this._failCallback=i||function(){},this.check_threshold=null,this.info=null,L=this}start(t){this.info=t,this.isRunning&&(this.isRunning=!0),_.isNumber(this.info.interval)?this.check_threshold=1e3*this.info.interval:this.check_threshold=6e4,this._timers.push(setInterval(()=>{this._refreshBeacons()},this.check_threshold)),console.info("Beacon detector started")}stop(){this._clearTimer(),this.isRunning=!1,console.info("Beacon detector stopped")}_refreshBeacons(){this._detectedCallback()}_clearTimer(){this._.forEach(this._timers,t=>{try{clearInterval(t)}catch(e){console.warn("Failed to clear detector timer.",e)}}),this._timers=[]}}var S={methods:{isNumber:t=>!_.isNaN(t)&&_.isNumber(t)}},$=i("5118"),x={name:"Map",data(){return{id:"map",map:null,url:"",zoomLv:"",layer:"",hubLayer:"",workerLayer:"",camLayer:"",ipcam:"",ipcams:[],product_id:null,contextCoordinate:null,infoWindow:null,hubInfoWindow:null,hubFilterOn:0,hubSetIntervalData:{},gadgetInfoNumber:this._.keys(window.CONSTANTS.GADGET_INFO),selectFilteredBeacons:this._.keys(window.CONSTANTS.GADGET_INFO),bcns:{},bcnsData:{},hubsData:{},hubListWhichIsDetectOneGadget:{},options:{custom:null,items:[]},markerMap:{hubs:{},cams:{}},tags:{s:["6","7","16"],m:["9","11","12","13"],l:["8"],xl:["1","2"]}}},methods:{initloadMap(){this.showLoading(),this.services.getMapFiles(t=>{this.map=new l["c"](this.id,{center:[90,50],zoom:5,maxZoom:7,minZoom:4,maxExtent:new l["a"](0,0,180,85),zoomAnimation:!0,zoomInCenter:!0,panAnimation:!1,dragRotate:!1,dragPitch:!1,drgaRotatePitch:!1,touchGesture:!1,touchZoom:!1,touchRotate:!1,touchPitch:!1,touchZoomRotate:!1,doubleClickZoom:!1,baseLayer:new l["b"]("base",[{url:t,extent:[0,0,180,85],opactiy:1}],{opactiy:1})}),this.map.once("baselayerload",()=>{this.layer=new l["e"]("vector").addTo(this.map),this.hubLayer=new l["e"]("vector1").addTo(this.map),this.workerLayer=new l["e"]("vector2").addTo(this.map),this.camLayer=new l["e"]("vector3").addTo(this.map),this.workerLayer.setZIndex(3),this.hubLayer.setZIndex(1),this.initContextMenu(),this.map.fitExtent(),this.services.getInfo(t=>{t&&(this.loadHubs(t),this.loadIpCams(),this.initBeaconLocationHandler(t)),this.hideLoading()})})})},initBeaconLocationHandler(t){this.beaconDetector=new O(this,()=>{this.infoWindow&&this.infoWindow.remove(),this.services.getHubs(t=>{this._.forEach(t,t=>{if(this.$store.getters.getHub(t.id)){let e=this.$store.getters.getHub(t.id);this._.isEqual(e.status,t.status)||(e.status=t.status,this.$store.commit("updateHubData",e))}else 1===t.status&&this.$store.commit("addHub",t)})}),this.services.getBeacons(t.product_id,t=>{this.removeGadgetItems(),this.$store.commit("removeGadgets"),this.$store.commit("addDetectedGadget",t),this._.forEach(this.markerMap.hubs,(t,e)=>{const i=this.$store.getters.getHub(e);i&&i.custom&&this.loadGadgets(e,()=>{if(this.drawWorkers(e,i.custom.map_location),this.hubInfoWindow){const t=this.getHubInfoWindowContent(this.hubInfoWindow.id),e=document.getElementById("worker-info-panel");e.innerHTML=t.context,document.getElementById("worker-info-count").innerText=t.count,this.registerGadgetHandlerInHubInfoWindow()}},t=>{})})})},t=>{console.warn("There's no data to update")}),this.beaconDetector.start(t)},initContextMenu(){this.contextMenuOption={custom:!0,items:'<div class="custom_menu"><div class="plus-symbol"></div>\n                    <div class="deviceText">Device</div><div class="addText">ADD</div>\n                    <div class="additem">\n                    <div class="scanneritem">Add SCANNER</div>\n                    <div class="camitem">Add IPCAM</div></div></div>',dx:-75,animation:"fade"},this.map.on("contextmenu",t=>{this.contextCoordinate=t.coordinate,this.map.closeMenu(),this.map.setMenu(this.contextMenuOption).openMenu(t.coordinate),document.getElementsByClassName("scanneritem")[0].onclick=()=>{this.handleAddHub(t.coordinate)},document.getElementsByClassName("camitem")[0].onclick=()=>{this.handleAddIPCam(t.coordinate)}})},loadHubs(t){console.debug("Try load hubs"),this.services.getBeacons(t.product_id,t=>{this.$store.commit("addDetectedGadget",t),this._loadHubs()})},_loadHubs(){this.services.getHubs(t=>{this._.forEach(t,t=>{this.$store.commit("addHub",t),_.isEmpty(t.custom.map_location)||this.loadGadgets(t.id,()=>{this.drawHub(t.id,t.custom.map_location)},t=>{})})})},loadGadgets(t,e,i){this.services.getDetectBeaconList(t,t=>{this.$store.commit("addDetectedHubGadget",t),this.hasSameGadget(e)},t=>{i(t)})},handleAddHub(t){this.showhubList(t,t=>{this.map.closeMenu(t);const e=this.$store.getters.getGadgetListDetectedByOneHub(t);this._.isEmpty(e)?this.loadGadgets(t,()=>{this.drawHub(t,this.contextCoordinate)},t=>{}):this.drawHub(t,this.contextCoordinate)})},showhubList(t,e){this.services.getHubs(i=>{this.options.items=[];let s='<div class="custom_menu"><div class="plus-symbol"></div>\n                                    <div class="addText">Scanner</div>\n                                    <div class="additem"></div></div>';if(this.map.setMenu({custom:!0,items:s}).openMenu(t),this._.isEmpty(i)||this._.forEach(i,(t,i)=>{if(this.$store.commit("addHub",t),!this._.has(this.markerMap.hubs,t.id))if(t.custom&&t.custom.map_location)console.debug(`The ${t.name} hub has location data. so skip`);else{let s=document.createElement("div");s.id=`hubitem${i}`,s.innerText=t.name,s.onclick=()=>{e(t.id)},document.getElementsByClassName("additem")[0].appendChild(s)}}),!document.getElementsByClassName("additem")[0].children.length){let t=document.createElement("div");t.className="noScanner",t.innerText="No Scanner",document.getElementsByClassName("additem")[0].appendChild(t)}},function(t){console.warn("Failed to load hub list.")})},drawHub(t,e){console.debug("Try draw hub, id: ",t);let i=null,s=this.$store.getters.getHub(t);_.has(this.markerMap.hubs,t)||(this.zoomLv=this.map.getZoom()/11*50,i=new l["d"]([e.x,e.y],{symbol:{markerFile:`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab1.svg`,markerWidth:this.zoomLv,markerHeight:this.zoomLv},draggable:!0}).addTo(this.hubLayer),this.markerMap.hubs[t]=i,s.custom.map_location={x:e.x,y:e.y},this._.has(s.custom,"is_counted_hub")?this._.isEqual(s.custom.is_counted_hub,!0)&&i.updateSymbol({markerFile:`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab10.svg`}):s.custom.is_counted_hub=!1,this._.isEqual(s.status,"0")&&i.updateSymbol({markerFile:`${window.CONSTANTS.URL.BASE_IMG}icon-hub1.svg`}),this.$store.commit("updateHubData",s),this._updateHubData(s,()=>{this.map.on("zoomend",t=>{this.zoomLv=this.map.getZoom()/11*50,i.updateSymbol({markerWidth:this.zoomLv,markerHeight:this.zoomLv})})},function(t){console.warn("Failed to update hub data ",t)}),i.on("click",()=>{this.showHubInfoWindow(t,i)}),i.on("contextMenu",()=>{i.closeInfoWindow(),this.showContextMenu(t,0,i)}),i.on("dragstart",()=>{i.closeInfoWindow()}),i.on("dragend",e=>{s.custom.map_location={x:e.coordinate.x,y:e.coordinate.y},this.$store.commit("updateHubData",s),this.hasSameGadget(()=>{this.drawWorkers(t,e.coordinate)}),this._.has(this.hubSetIntervalData,t)||this.setHubTimeOut(t)}),this.hasSameGadget(()=>{this.drawWorkers(t,e)}))},setHubTimeOut(t){this.hubSetIntervalData[t]=Object($["setTimeout"])(()=>{var e=this.$store.getters.getHub(t);this.markerMap.hubs[t];this._.has(e.custom,"map_location")&&this._updateHubData(e,()=>{delete this.hubSetIntervalData[t]},function(t){console.warn("Failed to update hub data ",t)})},3e3)},removeHubMarker(t){let e=this.markerMap.hubs[t];this.$store.getters.getdetectedGadgetList;if(this._.isEmpty(e))console.warn(`Failed to remove hub marker, cannot find marker by given id: ${t}`);else{let i=this.$store.getters.getHub(t);this._.isEmpty(i)?console.warn(`Failed to clear hub location, cannot found hub model by given id: ${t}`):(delete i.custom.map_location,delete i.custom.is_counted_hub,this.$store.commit("updateHubData",i),this._updateHubData(i,()=>{console.log("Succeed to update hub data")},t=>{console.log("load hub counting failed",t)}),console.log("success to remove hubmarker")),e.remove(),delete this.markerMap.hubs[t],this.removeGadgetMarkersWhenHubIsMoved(t)}this.hasSameGadget(()=>{this._.forEach(this.markerMap.hubs,(t,e)=>{this.drawWorkers(e,this.markerMap.hubs[e]._coordinates)})})},removeGadgetMarkersWhenHubIsMoved(t){const e=this.$store.getters.getGadgetListDetectedByOneHub(t);this._.isEmpty(e)||this._.forEach(e,t=>{const e=this.$store.getters.getGadget(t.gid),i=this._.keys(this.markerMap.hubs),s=this._.intersection(i,e.hubIdList);s.length<=1&&(this.bcnsData[t.gid].marker.remove(),delete this.bcnsData[t.gid],this.$store.commit("removeGadgetLocation",t.gid))})},showHubInfoWindow(t,e,i){let s={},o="",a=this.$store.getters.getHub(t);this.$store.getters.getGadgetListDetectedByOneHub(t);this._.isEmpty(this.infoWindow)||this.infoWindow.remove(),this.hubInfoWindow&&(this.hubInfoWindow.id===t||e.removeInfoWindow()),o=a.custom.is_counted_hub?"ON":"OFF",s=this.getHubInfoWindowContent(t),e.setInfoWindow({content:`<div class="worker_menu">\n                    <div class="worker">\n                    <div class="workerId">\n                    <div class="workerkey">SCANNER</div><div class="hubInfo" title="${a.name}">${a.name}</div></div>\n                    <div class="workerValue">\n                    <div class="workerkey">WORKER</div><div class="workerCount" id="worker-info-count">${s.count}</div></div>\n                    <div class="forcount">For Counting</div>\n                    <label class="moi-onoff-toggle-hub">\n\t                <input class="moi-toggle-button-hub" type="checkbox">\n\t                <span class="moi-toggle-slider-hub round-hub">${o}</span>\n                    </label>\n                    </div>\n                    <div id="worker-info-panel" class="workerInfo">${s.context}</div>\n                    <div class="close-button-custom"></div></div></div>`,width:350,custom:!0,dy:-200}),e.openInfoWindow(),this.hubInfoWindow={id:t,item:e._infoWindow},document.getElementsByClassName("moi-toggle-button-hub")[0].checked=!!a.custom.is_counted_hub,document.getElementsByClassName("moi-toggle-button-hub")[0].onchange=()=>{a.custom.is_counted_hub=!!document.getElementsByClassName("moi-toggle-button-hub")[0].checked;let t=`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab1.svg`;document.getElementsByClassName("moi-toggle-slider-hub")[0].innerText="OFF",a.custom.is_counted_hub&&(document.getElementsByClassName("moi-toggle-slider-hub")[0].innerText="ON",t=`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab10.svg`);let e=this.markerMap.hubs[a.id];e&&e.updateSymbol({markerFile:t}),this._updateHubData(a,()=>{this.$store.commit("updateHubData",a)},t=>{console.log("load hub counting failed",t)})},this.registerGadgetHandlerInHubInfoWindow(),_.last(document.getElementsByClassName("close-button-custom")).onclick=()=>{e._infoWindow.remove()}},_updateHubData(t,e,i){this.services.updateHubData(t,()=>{e()},t=>{i()})},drawWorkers(t,e){let i=this.$store.getters.getGadgetListDetectedByOneHub(t),s=1;this.zoomLv=this.map.getZoom()/11*50,this._.forEach(i,t=>{let i=null,o=[],a=this.$store.getters.getGadget(t.gid),n=this.zoomLv,d=this.zoomLv,c=null;if(this._.isEmpty(a.custom)?(s++,o.push(e.x,e.y-s/10*2)):o.push(a.custom.x,a.custom.y),this.bcnsData[a.gid])i=this.bcnsData[a.gid].marker,i.removeInfoWindow(),i.setCoordinates(o),this.bcnsData[a.gid].marker=i;else{let t=`${window.CONSTANTS.URL.BASE_IMG}icon-worker1-tab.svg`;a.tags&&(c=this._.first(a.tags),t=`${window.CONSTANTS.URL.BASE_IMG}icon-worker${a.tags}-tab.svg`,this._.includes(this.tags.m,c)?n*=1.25:this._.includes(this.tags.l,c)?n*=1.68:this._.includes(this.tags.xl,c)?n*=2:this._.includes(this.tags.s,c)||(n*=1.5)),i=new l["d"](o,{symbol:{markerFile:t,markerWidth:n,markerHeight:d}}).addTo(this.workerLayer),this.bcnsData[a.gid]={marker:i,tags:a.tags}}this.$store.commit("GadgetIsInMap",a.gid),this._.includes(this.selectFilteredBeacons,this._.first(a.tags))||(i.hide(),this.$store.commit("GadgetIsnotInMap",a.gid)),_.isEmpty(a.tags)&&i.updateSymbol("markerFile",window.CONSTANTS.URL.BASE_IMG+"icon-alert-tab.svg"),i.on("click",()=>{this.showGadgetInFoWindow(a,this.bcnsData[a.gid].marker)}),this.map.on("zoomend",t=>{this.zoomLv=this.map.getZoom()/11*50,n=this.zoomLv,d=this.zoomLv,this._.includes(this.tags.m,c)?n*=1.25:this._.includes(this.tags.l,c)?n*=1.68:this._.includes(this.tags.xl,c)?n*=2:this._.includes(this.tags.s,c)||(n*=1.5),i.updateSymbol({markerWidth:n,markerHeight:d})})})},showGadgetInFoWindow(t,e){let i=window.CONSTANTS.GADGET_INFO[this.bcnsData[t.gid].tags],s=this.$store.getters.getdetectedGadgetList[t.gid].hubIdList,o="",a=0;this._.isEmpty(s)||this._.forEach(s,t=>{const e=this.$store.getters.getHub(t);e&&this._.has(e.custom,"map_location")&&(o+='<div class="scannerName" title="'+e.name+'">'+e.name+"</div>",a++)});let n=`<div class="bcns">\n                        <div class="bcnsInfo1">\n                        <div class="bcnskey1">NAME</div>\n                        <div class="bcnName1" title="${t.name}">${t.name}</div>\n                        <div class="bcnskey1">KIND</div>\n                        <div class="bcnName1" title="${i}">${i}</div>\n                        <div class="scannerData">SCANNER(${a})</div>\n                        <div class="scannerNameList">${o}</div></div>\n                        <div id="${t.gid}loading-panel" class="loading-panel"></div>\n                        <div id="${t.gid}loader" class="loader"><div></div><div></div><div></div><div></div></div>\n                        <img id="${t.gid}img" class="bcnsImg1" src="${window.CONSTANTS.URL.BASE_IMG}item${_.isEmpty(t.tags)?1:_.first(t.tags)}.png"></img>\n                            <div class="close-button-custom"></div></div></div>`;e.setInfoWindow({content:n,width:400,bottom:11,custom:!0,dy:-250,single:!1}),e.openInfoWindow();const d=document.getElementById(`${t.gid}loader`),c=document.getElementById(`${t.gid}loading-panel`);this.services.getBeaconImg(t.gid,e=>{let i=document.getElementById(`${t.gid}img`);e&&!this._.isEmpty(i)&&(i.src=e),d&&(d.remove(),c.remove())},t=>{d&&(d.remove(),c.remove())}),_.last(document.getElementsByClassName("close-button-custom")).onclick=()=>{e.removeInfoWindow()}},loadIpCams(){console.debug("Try load ipcams"),this.services.getIpcams(t=>{this._.forEach(t,t=>{this.$store.commit("addIpcam",t),this._.isEmpty(t.custom)||this._.isEmpty(t.custom.map_location)||this.drawIpcam(t.id,t.custom.map_location)})})},handleAddIPCam(t){this.showIpCamList(t,t=>{this.map.closeMenu(t),this.drawIpcam(t,this.contextCoordinate)})},showIpCamList(t,e){this.services.getIpcams(i=>{this.$store.commit("addIpcams",i),this.options.items=[];let s='<div class="custom_menu"><div class="plus-symbol"></div>\n                                <div class="addText">IPCAM</div>\n                                <div class="additem"></div></div>';if(this.map.setMenu({custom:!0,items:s}).openMenu(t),this._.isEmpty(i)||this._.forEach(i,(t,i)=>{if(!this._.has(this.markerMap.cams,t.id))if(t.custom&&t.custom.map_location)console.debug(`The ${t.name} cam has location data. so skip`);else{let s=document.createElement("div");s.id=`camitem${i}`,s.innerText=t.name,s.onclick=()=>{e(t.id)},document.getElementsByClassName("additem")[0].appendChild(s)}}),!document.getElementsByClassName("additem")[0].children.length){let t=document.createElement("div");t.className="noIpcam",t.innerText="No Ipcam",document.getElementsByClassName("additem")[0].appendChild(t)}},function(t){console.warn("Failed to load cam list.")})},drawIpCams(t){this._.forEach(t,t=>{this._.isEmpty(t.custom)||this._.isEmpty(t.custom.map_location)||this.drawIpcam(t.id,t.custom.map_location)})},drawIpcam(t,e){console.debug("Try draw ipcam, id: ",t);let i=null;var s=this.$store.getters.getIpCam(t);this.zoomLv=this.map.getZoom()/11*50;let o=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-default.svg`;s.custom.is_visible_moi&&(o=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-checked.svg`),i=new l["d"]([e.x,e.y],{symbol:{markerFile:o,markerWidth:this.zoomLv,markerHeight:this.zoomLv},draggable:!0}).addTo(this.camLayer),i.on("click",()=>{i.closeInfoWindow(),this.showIpcamWindow(t,i)}),i.on("contextmenu",()=>{i.closeInfoWindow(),this.showContextMenu(t,1,i)}),i.on("dragstart",()=>{i.closeInfoWindow()}),i.on("dragend",t=>{s.custom.map_location={x:t.coordinate.x,y:t.coordinate.y},this._updateIpcamData(s,()=>{this.$store.commit("updateIpcamData",s)},t=>{console.log("load ipcam failed",t)})}),this.markerMap.cams[t]=i,s.custom.map_location={x:e.x,y:e.y},this._updateIpcamData(s,()=>{this.$store.commit("updateIpcamData",s)},t=>{console.log("load ipcam failed",t)}),this.map.on("zoomend",t=>{this.zoomLv=this.map.getZoom()/11*50,i.updateSymbol({markerWidth:this.zoomLv,markerHeight:this.zoomLv})})},showIpcamWindow(t,e){let i=this.$store.getters.getIpCam(t),s=null;this._.isEmpty(this.infoWindow)||this.infoWindow.remove(),this._.isEmpty(i)?s+="UNKNOWN":s=i.name,e.setInfoWindow({content:`<div class="ipcam_menu">\n                    <div class="ipcam-container">\n                    <div class="ipcamId">\n                    <div class="ipcamKey">IPCAM</div><div class="ipcamInfo" title="${s}">${s}</div></div>\n                    <div class="moi">MOI System</div>\n                    <label class="moi-onoff-toggle">\n\t                <input class="moi-toggle-button" type="checkbox">\n\t                <span class="moi-toggle-slider round"></span>\n                    </label></div>\n                    <div class="ipcam-right-panel">\n                    </div><div class="bottom-shape"></div><div class="close-button"></div></div>`,custom:!0,dy:-403,single:!1}),e.openInfoWindow(),document.getElementsByClassName("moi-toggle-button")[0].checked=!!i.custom.is_visible_moi,document.getElementsByClassName("moi-toggle-button")[0].onchange=()=>{i.custom.is_visible_moi=document.getElementsByClassName("moi-toggle-button")[0].checked;let t=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-default.svg`;i.custom.is_visible_moi&&(t=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-checked.svg`);let e=this.markerMap.cams[i.id];e&&e.updateSymbol({markerFile:t}),this._updateIpcamData(i,()=>{this.$store.commit("updateIpcamData",i)},t=>{console.log("load ipcam failed",t)})};var o="vxg_media_player"+(new Date).getTime(),a=document.createElement("div");a.setAttribute("id",o),a.setAttribute("class","mediaplayer vxgplayer");var n=document.getElementsByClassName("ipcam-right-panel")[0];n.appendChild(a);let d="";this._.isEmpty(i.custom)||(d=`rtsp://${i.custom.id}:${i.custom.password}@${i.custom.ip}`),vxgplayer(o,{url:d,width:600,height:335,controls:!0,nmf_path:"media_player.nmf",nmf_src:"static/libs/mediaplayer/pnacl/Release/media_player.nmf"}).ready(function(){console.log(" =>ready player "+o),vxgplayer(o).src(d),vxgplayer(o).play(),console.log(" <=ready player "+o)});var c=vxgplayer(o);c.onError(function(t){console.warn("error",t.error())}),this.ipcamInfoWindow=e._infoWindow,_.last(document.getElementsByClassName("close-button")).onclick=()=>{e.removeInfoWindow()}},removeIpcamMarker(t){let e=this.markerMap.cams[t];if(this._.isEmpty(e))console.warn(`Failed to remove ipcam marker, cannot find ipcam by given id: ${t}`);else{let i=this.$store.getters.getIpCam(t);this._.isEmpty(i)?console.warn(`Failed to clear ipcam location, cannot found ipcam model by given id: ${t}`):(delete i.custom.map_location,this.services.updateIpcamData(i,()=>{console.log("success to remove ipcam marker")},e=>{console.warn(`Failed to clear ipcam location, cannot found ipcam model by given id: ${t}`)})),e.remove()}delete this.markerMap.cams[t]},_updateIpcamData(t,e,i){this.services.updateIpcamData(t,e,i)},setGadgetLocation(t){let e={},i={},s={},o=0,a=0,n=0,d=null,c=null,r=0,l=0;e=this._.sortBy(t,["_t"]),e=this._.reverse(e),this._.forEach(e,t=>{let e=this.$store.getters.getHub(t.hid);this._.has(e.custom,"map_location")&&l<2&&(i[t.hid]=e.custom.map_location,i[t.hid].dist=t.dist,i[t.hid].gid=t.gid,l++)}),2===this._.size(i)&&(this._.forEach(i,(t,e)=>{0===r?d=t:c=t,this.isNumber(t.dist)&&(n+=t.dist),r++}),this._.inRange(Math.abs(d.y-c.y),9,13)?this._.inRange(d.y,48,72)&&(c.x>d.x?(o=(d.x+2*c.x)/3,a=(c.y+2*d.y)/3):(o=(c.x+2*d.x)/3,a=(d.y+2*c.y)/3)):(o=(d.x*c.dist+c.x*d.dist)/n,a=(d.y*c.dist+c.y*d.dist)/n)),this._.isEqual(o,0)||(this._.forEach(i,(t,e)=>{s={hid:e,gid:t.gid,x:o,y:a,zoomLv:this.map.getZoom()/20}}),this.$store.commit("addGadgetLocation",s))},hasSameGadget(t){const e=this.$store.getters.getdetectedGadgetList,i={},s=this._.keys(this.markerMap.hubs);this._.forEach(e,(t,e)=>{const o=this._.intersection(s,t.hubIdList);o.length>1?(i[e]={},i[e]=o):1===o.length&&this.$store.commit("removeGadgetLocation",e)});let o=this._.keys(i).length;0==o?t():(this._.forEach(i,(t,e)=>{var i=this.$store.getters.getHubListDetectOneGadget(e);this.setGadgetLocation(i)}),t())},refilterBeacons(){this._.forEach(this.bcnsData,(t,e)=>{this._.includes(this.selectFilteredBeacons,this._.first(t.tags))||(this.bcnsData[e].marker.show(),this.$store.commit("GadgetIsInMap",e))}),this.selectFilteredBeacons=this._.keys(window.CONSTANTS.GADGET_INFO)},setFilteredBeacons(t,e){this._.forEach(this.bcnsData,(i,s)=>{this._.first(i.tags)===t&&(e?(this.$store.commit("GadgetIsInMap",s),i.marker.show()):(this.$store.commit("GadgetIsnotInMap",s),i.marker.hide()))})},bgChangeWorkerTab(t){this.setFilteredBeacons(),document.getElementsByClassName(`filterCheckbox${t}`)[0].onchange=()=>{this.bgChangeWorker(t)}},bgChangeWorker(t){this.setFilteredBeacons(),document.getElementsByClassName(`filterCheckbox${t}`)[0].onchange=()=>{this.bgChangeWorkerTab(t)}},filterBeacons(){let t='<div class="filter_menu"><div>';var e=this.map.getCenter(),i={};e.y-=3,this._.forEach(this.gadgetInfoNumber,e=>{t+=`<label class="filterImg">\n                            <img id="worker${e}" class="workerImg" src="${window.CONSTANTS.URL.BASE_IMG}icon-worker${e}-tab.svg">\n                            <input class="filter-checkbox" id ="filterCheckbox${e}" type="checkbox"></label>`}),t+='</div>\n                    <div class="controlContainer">\n                    <button id="reset" class="reset">Reset</button>\n                    </div><div class="close-button-filter"></div>\n                    </div>',i={autoPan:!0,autoCloseOn:!0,autoOpenOn:!0,content:t,custom:!0,dy:-250},this.filterWindow=new l["f"].InfoWindow(i),this.filterWindow.addTo(this.map).show(e),document.getElementById("clickbtnPlus").onclick=()=>{this.filterWindow&&this.filterWindow.remove()},document.getElementById("clickbtnMinus").onclick=()=>{this.filterWindow&&this.filterWindow.remove()},document.getElementsByClassName("reset")[0].onclick=()=>{this.refilterBeacons(),this.filterWindow&&(this.filterWindow.hide(),this.filterWindow.remove()),this.filterWindow=null},document.getElementsByClassName("close-button-filter")[0].onclick=()=>{this.filterWindow.remove(),this.filterWindow=null},this._.forEach(this.gadgetInfoNumber,t=>{document.getElementById(`filterCheckbox${t}`).checked=!!this._.includes(this.selectFilteredBeacons,t),document.getElementById(`filterCheckbox${t}`).onchange=()=>{const e=document.getElementById(`filterCheckbox${t}`).checked;e?this.selectFilteredBeacons.push(t):this.selectFilteredBeacons=this._.without(this.selectFilteredBeacons,t),this.setFilteredBeacons(t,e)}})},choiceFilter(){this.sweetbox.fire({titleText:"Choose the item to filter",html:'<div class="filterItemHub">Hub</div><div class="filterItemGadget">Gadget</div>',showCancelButton:!0,showCloseButton:!0,confirmButtonText:"",cancelButtonText:"",customClass:{title:"filterTitle",confirmButton:"filterHubIcon",cancelButton:"filterGadgetIcon"},buttonsStyling:!1,width:300}).then(t=>{t.value?0===this.hubFilterOn?(this.hubLayer.hide(),this.hubFilterOn=1):(this.hubLayer.show(),this.hubFilterOn=0):this._.isEqual(t.dismiss,"cancel")&&this.filterBeacons()}),1===this.hubFilterOn?document.getElementsByClassName("filterHubIcon")[0].classList.add("hubFilterOn"):document.getElementsByClassName("filterHubIcon")[0].classList.remove("hubFilterOn")},filterHub(){this.sweetbox.mixin({confirmButtonText:"Next &rarr;",showCancelButton:!0,progressSteps:["1","2"]}).queue([{title:"Choose the Tunnel",html:'<div class="selectTn">\n                            <input type="checkbox">\n                            <label id="tn">Tunnel 1</label></div>\n                            <div class="selectTn">\n                            <input type="checkbox">\n                            <label id="tn">Tunnel 2</label></div>\n                            <div class="selectTn">\n                            <input type="checkbox">\n                            <label id="tn">Tunnel 3</label>\n                                </div>'},{title:"Choose the Depths",html:'<div class="selectDepth">\n                            <input type="checkbox">\n                            <label id="dpth">Tunnel 1</label></div>\n                            <div class="selectDepth">\n                            <input type="checkbox">\n                            <label id="dpth">Tunnel 2</label></div>\n                            <div class="selectDepth">\n                            <input type="checkbox">\n                            <label id="dpth">Tunnel 3</label>\n                                </div>'}]).then(t=>{t.value&&Swal.fire({title:"All done!",html:"Your answers: <pre><code>"+JSON.stringify(t.value)+"</code></pre>",confirmButtonText:"Lovely!"})})},showLoading(){this.$emit("map-load",!0)},hideLoading(){this.$emit("map-load",!1)},showContextMenu(t,e,i){var s="",o="",a=null;switch(e){case window.CONSTANTS.CONTEXT_TYPE.SCANNER:var n=this.$store.getters.getHub(t);s="Scanner",n&&(o=n.name),a=this.removeHubMarker;break;case window.CONSTANTS.CONTEXT_TYPE.IPCAM:var d=this.$store.getters.getIpCam(t);s="IPCam",d&&(o=d.name),a=this.removeIpcamMarker;break}i.setMenu({items:`<div class="context-menu-container ${s.toLowerCase()}">\n                    <div class="context-menu-top-panel"><div class="context-menu-text-wrapper">\n                    <div class="context-menu-type-text">${s}</div>\n                    <div class="context-menu-name-text">${o}</div></div></div>\n                    <div class="context-menu-bottom-panel">\n                    <div id="move-button" class="context-menu-button-frame ${s.toLowerCase()}"><div class="context-menu-button-panel">\n                    <div id="move-button-text" class="context-menu-button-text">${"Move "+s.toLowerCase()}</div></div></div>\n                    <div id="remove-button" class="context-menu-button-frame ${s.toLowerCase()}"><div class="context-menu-button-panel">\n                    <div id="remove-button-text" class="context-menu-button-text">${"Remove "+s.toLowerCase()}</div></div></div></div></div>`,width:350,custom:!0,dy:-120,animation:"fade",dx:-90}).openMenu(),document.getElementById("remove-button").onclick=function(){a(t),i.closeMenu()}},removeItems(){this.sweetbox.fire({title:"Are you sure?",text:"You won't be able to revert this!",width:230,showCloseButton:!0,showCancelButton:!0,reverseButtons:!0,cancelButtonColor:"#d33"}).then(t=>{t.value&&(this.removeHubItems(),this.removeGadgetItems(),this.removeIpcamItems())})},removeHubItems(){this._.forEach(this.markerMap.hubs,(t,e)=>{t.remove();let i=this.$store.getters.getHub(e);i.custom={},this.$store.commit("updateHubData",i),this._updateHubData(i,()=>{console.log("Succeed to update hub data")},t=>{console.log("load hub counting failed",t)})}),this.markerMap.hubs={}},removeGadgetItems(){this.bcnsData&&this._.forEach(this.bcnsData,(t,e)=>{t.marker.remove(),this.$store.commit("removeGadgetLocation",e)}),this.bcnsData={}},removeIpcamItems(){let t=this.$store.getters.getIpCams;t&&this._.forEach(t,t=>{this.removeIpcamMarker(t.id)})},getHubInfoWindowContent(t){const e=this.$store.getters.getGadgetListDetectedByOneHub(t);let i="",s=0;return this._.forEach(e,t=>{var e=this.$store.getters.getdetectedGadgetName(t.gid);if(e){const o=new Date(1e3*t._t).toLocaleTimeString("eu");i+=`<div class="workerInfo-content" id="${t.gid}">\n                                <div class="workerInfo-wrapper">\n                                <div class="workerInfo-name">${e}</div>\n                                <span class="workerInfo-time">Today ${o}</span></div></div>`,s++}}),s<1&&(i='<div class="workerInfo-empty">Theres no hub to load</div>'),{context:i,count:s}},registerGadgetHandlerInHubInfoWindow(){if(this.hubInfoWindow){const t=this.$store.getters.getGadgetListDetectedByOneHub(this.hubInfoWindow.id);this._.forEach(t,t=>{const e=document.getElementById(t.gid);if(e){const i=this.$store.getters.getdetectedGadgetList[t.gid];e.onclick=()=>{this.showGadgetInFoWindow(i,this.bcnsData[t.gid].marker)}}})}}},computed:{isEmptyUrl(){return this._.isEmpty(this.mapUrl)}},created(){this.$emit("select-button"),Q.$on("zoomIn",()=>{this.map.zoomIn(7)}),Q.$on("zoomOut",()=>{this.map.zoomOut(6)}),Q.$on("filter",()=>{this.choiceFilter()}),Q.$on("removeItem",()=>{this.removeItems()})},mounted(){this.initloadMap()},mixins:[S]},B=x,G=(i("54d9"),i("2877")),M=Object(G["a"])(B,c,r,!1,null,null,null),H=M.exports,D=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{attrs:{id:"topContainer"}},[i("div",{attrs:{id:"leftContainer"}},[i("div",{attrs:{id:"zoom"}},[i("img",{attrs:{id:"clickbtnPlus",src:"static/location/imgs/icon-plus.svg"},on:{click:t.zoomIn}}),i("img",{attrs:{id:"clickbtnMinus",src:"static/location/imgs/icon-minus.svg"},on:{click:t.zoomOut}})]),i("div",{attrs:{id:"filter"}},[i("img",{attrs:{id:"clickbtnFilter",src:"static/location/imgs/icon-filter.svg"},on:{click:t.filter}})]),i("div",{attrs:{id:"remove"}},[i("div",{attrs:{id:"removebtn"},on:{click:t.remove}})])]),i("div",{attrs:{id:"rightContainer"}},[i("div",{attrs:{id:"upload"}},[i("button",{attrs:{id:"clickbtn"},on:{click:function(e){return t.$refs.file.click()}}},[t._m(0)]),i("input",{ref:"file",attrs:{type:"file",id:"file",accept:"image/jpeg, image/png, image/gif"},on:{change:t.onFileChange}})])])])},A=[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{attrs:{id:"btntitle"}},[t._v("Upload "),i("i",{staticClass:"fa fa-upload"})])}],W={name:"Top",methods:{zoomIn(){Q.$emit("zoomIn")},zoomOut(){Q.$emit("zoomOut")},onFileChange(t){this.file=t.target.files[0],this.submitFile()},getMapFile(t){this.services.getMapFile},remove(){Q.$emit("removeItem")},submitFile(){this.services.postMapFile(this.file,t=>{window.location.reload()},t=>{console.warn("File upload failed")})},handleFileUpload(){this.file=this.$refs.file.files[0]},filter(){Q.$emit("filter")}},computed:{isEmptyUrl(){return!this.url}},created(){this.getMapFile()}},F=W,R=(i("dee7"),Object(G["a"])(F,D,A,!1,null,null,null)),U=R.exports,z={components:{Map:H,Top:U},data(){return{isLoaded:!1}},methods:{handleMapLoad(t){this.isLoaded=t}}},P=z,j=(i("034f"),Object(G["a"])(P,n,d,!1,null,null,null)),Z=j.exports,V=i("415c"),Y=i.n(V),q=(i("5453"),i("2f62"));i("3e8f");a["a"].use(q["a"]);var J=new q["a"].Store({state:{hubs:{},gadgets:{},detectedgadgets:{},forInfohubs:[],ipcams:{},hubListDetectOneGadget:{},gadgetListDetectedByOneHub:{}},getters:{getHubs:t=>{return _.values(t.hubs)},getHub:t=>e=>{if(!_.isEmpty(t.hubs[e]))return t.hubs[e];console.warn(`Theres no hub data in hubid ${e}`)},getHubsWhichIsInMap:t=>{let e={};return _.forEach(t.hubs,t=>{_.isEmpty(t.custom)||_.isEmpty(t.custom.map_location)||(e[t.id]=t)}),_.values(e)},getBeaconWithHubs:t=>e=>{if(!_.isEmpty(t.forInfohubs[e]))return t.forInfohubs[e];console.warn(`Theres no hub data in hubid ${e}`)},getdetectedGadgetList:t=>{return t.detectedgadgets},getGadget:t=>e=>{if(!_.isEmpty(t.detectedgadgets[e]))return t.detectedgadgets[e];console.warn(`Theres no hub data in gadget id ${e}`)},getdetectedGadgetName:t=>e=>{return t.detectedgadgets[e]?t.detectedgadgets[e].name:""},getIpCams:t=>{return _.values(t.ipcams)},getIpCam:t=>e=>{if(t.ipcams[e])return t.ipcams[e];console.warn(`Theres no ipcam data in ipcam id ${e}`)},getHubListDetectOneGadget:t=>e=>{return t.hubListDetectOneGadget[e]?t.hubListDetectOneGadget[e]:{}},getGadgetListDetectedByOneHub:t=>e=>{return t.gadgetListDetectedByOneHub[e]?t.gadgetListDetectedByOneHub[e]:{}}},mutations:{addHubs(t,e){_.forEach(e,e=>{t.hubs[e.id]=e})},addHub(t,e){t.hubs[e.id]=e},addDetectedGadget(t,e){_.forEach(e,e=>{t.gadgets[e.id]=e})},addDetectedHubGadget(t,e){_.forEach(e,i=>{if(_.has(t.gadgets,i.gid)){let s=t.gadgets[i.gid];_.isEmpty(t.detectedgadgets[i.gid])&&(t.detectedgadgets[i.gid]={gid:s.id,hubIdList:[],name:s.name,dist:i.dist,uuid:s.beacon_spec.uuid,major:s.beacon_spec.major,minor:s.beacon_spec.minor,custom:{},tags:s.tags,view:0,account_id:s.account_id}),t.forInfohubs[i.hid]=e,_.isEmpty(t.detectedgadgets[i.gid].hubIdList.find(t=>t===i.hid))&&t.detectedgadgets[i.gid].hubIdList.push(i.hid)}_.has(t.hubListDetectOneGadget,i.gid)||(t.hubListDetectOneGadget[i.gid]={}),_.has(t.hubListDetectOneGadget[i.gid],i.hid)?i._t>t.hubListDetectOneGadget[i.gid][i.hid]._t&&(t.hubListDetectOneGadget[i.gid][i.hid]=i):t.hubListDetectOneGadget[i.gid][i.hid]=i,_.has(t.gadgetListDetectedByOneHub,i.hid)||(t.gadgetListDetectedByOneHub[i.hid]={}),_.has(t.gadgetListDetectedByOneHub[i.hid],i.gid)?i._t>t.gadgetListDetectedByOneHub[i.hid][i.gid]._t&&(t.gadgetListDetectedByOneHub[i.hid][i.gid]=i):t.gadgetListDetectedByOneHub[i.hid][i.gid]=i})},updateHubData(t,e){t.hubs[e.id]&&(t.hubs[e.id]=e)},updateGadgetData(t,e){t.detectedgadgets[e.id]&&(t.detectedgadgets[e.id]=e)},removeGadgetLocation(t,e){t.detectedgadgets[e]&&t.gadgets[e]&&(t.detectedgadgets[e].custom={},t.gadgets[e].custom={})},addGadgetLocation(t,e){let i=t.gadgets[e.gid],s=t.detectedgadgets[e.gid];_.isEmpty(i)||_.isUndefined(s)||(i.custom=_.pick(e,["x","y"]),s.custom=_.pick(e,["x","y"]))},GadgetIsInMap(t,e){t.detectedgadgets[e]&&(t.detectedgadgets[e].view=window.CONSTANTS.HUB_VIEW.IN_MAP)},GadgetIsnotInMap(t,e){_.isEmpty(t.detectedgadgets[e])||(t.detectedgadgets[e].view=window.CONSTANTS.HUB_VIEW.NOT_IN_MAP)},removeGadgets(t){t.hubListDetectOneGadget={},t.gadgetListDetectedByOneHub={},_.forEach(t.gadgets,(e,i)=>{t.gadgets[i]={},a["a"].delete(t.gadgets,i)}),_.forEach(t.detectedgadgets,(e,i)=>{t.detectedgadgets[i]={},a["a"].delete(t.detectedgadgets,i)})},removeHubs(t){_.forEach(t.forInfohubs,(e,i)=>{t.forInfohubs[i]={},a["a"].delete(t.forInfohubs,i)})},removeIpcams(t){_.forEach(t.ipcams,(e,i)=>{t.ipcams[i]={},a["a"].delete(t.ipcams,i)})},addIpcams(t,e){_.forEach(e,e=>{t.ipcams[e.id]=e})},addIpcam(t,e){t.ipcams[e.id]=e},updateIpcamData(t,e){t.ipcams[e.id]&&(t.ipcams[e.id]=e)},removeHubInHubIdList(t,e){t.detectedgadgets[e.gid]&&(t.detectedgadgets[e.gid].hubIdList=_.without(t.detectedgadgets[e.gid].hubIdList,e.hid))}}}),K=i("3d20"),X=i.n(K);i("1aa9");i.d(e,"EventBus",function(){return Q}),a["a"].prototype.$http=m.a,a["a"].prototype.services=s,a["a"].prototype.beaconDetector=o,a["a"].prototype.sweetbox=X.a,a["a"].config.productionTip=!1;const Q=new a["a"]({});a["a"].use(Y.a),new a["a"]({store:J,render:t=>t(Z)}).$mount("#locationTracking")},"64a9":function(t,e,i){},b347:function(t,e,i){},dee7:function(t,e,i){"use strict";var s=i("1d68"),o=i.n(s);o.a}});
//# sourceMappingURL=app.0ab9c665.js.map
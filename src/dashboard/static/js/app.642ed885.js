(function(e){function t(t){for(var i,n,d=t[0],c=t[1],r=t[2],m=0,h=[];m<d.length;m++)n=d[m],o[n]&&h.push(o[n][0]),o[n]=0;for(i in c)Object.prototype.hasOwnProperty.call(c,i)&&(e[i]=c[i]);l&&l(t);while(h.length)h.shift()();return a.push.apply(a,r||[]),s()}function s(){for(var e,t=0;t<a.length;t++){for(var s=a[t],i=!0,d=1;d<s.length;d++){var c=s[d];0!==o[c]&&(i=!1)}i&&(a.splice(t--,1),e=n(n.s=s[0]))}return e}var i={},o={app:0},a=[];function n(t){if(i[t])return i[t].exports;var s=i[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=i,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(s,i,function(t){return e[t]}.bind(null,i));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/";var d=window["webpackJsonp"]=window["webpackJsonp"]||[],c=d.push.bind(d);d.push=t,d=d.slice();for(var r=0;r<d.length;r++)t(d[r]);var l=c;a.push([0,"chunk-vendors"]),s()})({0:function(e,t,s){e.exports=s("56d7")},"034f":function(e,t,s){"use strict";var i=s("64a9"),o=s.n(i);o.a},"1aa9":function(e,t){window.CONSTANTS={HUB_VIEW:{NOT_IN_MAP:0,IN_MAP:1},URL:{BASE_IMG:"static/location/imgs/",YOUR_CLOUD:"https://c2.prota.space",CONSOLE:""},GADGET_INFO:{1:"JUMBO DRILL(2B)",2:"JUMBO DRILL(3B)",3:"CHARGING CAR",4:"WHEEL LOADER",5:"DUMP TRUCK",6:"EXCAVATOR(WHEEL)",7:"EXCAVATOR(CRAWLER)",8:"SHOTCRETE MACHINE",9:"JCB",10:"CORE DRILLING MACHINE",11:"DOZER",12:"GROUTING MACHINE",13:"MAI PUMP",14:"MOBILE PRODUCTION UNIT",15:"CHARGING PUMP UNIT",16:"BUS"},MINIMUM_NUMBER:{HUB:1,FILTERED_BEACONS:16},CONTEXT_TYPE:{SCANNER:0,IPCAM:1}}},"1d68":function(e,t,s){},"54d9":function(e,t,s){"use strict";var i=s("b347"),o=s.n(i);o.a},"56d7":function(e,t,s){"use strict";s.r(t);var i={};s.r(i),s.d(i,"updateIpcamData",function(){return u}),s.d(i,"updateHubData",function(){return g}),s.d(i,"getInfo",function(){return p}),s.d(i,"getIpcams",function(){return v}),s.d(i,"getHubs",function(){return b}),s.d(i,"getHubListConnectedToGadget",function(){return f}),s.d(i,"getBeacons",function(){return w}),s.d(i,"getDetectBeaconList",function(){return I}),s.d(i,"getGadget",function(){return y}),s.d(i,"getMapFiles",function(){return E}),s.d(i,"getBeaconImg",function(){return N}),s.d(i,"postMapFile",function(){return T});var o={};s.r(o),s.d(o,"BeaconDetector",function(){return C});var a=s("2b0e"),n=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"locationTracking"}},[s("div",{directives:[{name:"show",rawName:"v-show",value:e.isLoaded,expression:"isLoaded"}],staticClass:"loading"},[e._m(0)]),s("Top"),s("Map",{on:{"map-load":e.handleMapLoad}})],1)},d=[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"main-loader"},[s("div"),s("div"),s("div"),s("div")])}],c=function(){var e=this,t=e.$createElement,s=e._self._c||t;return e.isEmptyUrl?s("div",{attrs:{id:e.id}}):e._e()},r=[],l=s("ec60"),m=s("bc3a"),h=s.n(m);const u=(e,t,s)=>{h.a.post(window.CONSTANTS.URL.CONSOLE+"/dash/cam/location",{cam:e},{headers:{"Content-Type":"application/json"}}).then(s=>{console.debug(`Sucess to post cam location in id ${e.id}`),t()}).catch(e=>{s()})},g=(e,t,s)=>{h.a.post(window.CONSTANTS.URL.CONSOLE+"/dash/hubs/update",{hub:e},{headers:{"Content-Type":"application/json"}}).then(e=>{t()}).catch(e=>{s()})},p=e=>{h()({url:window.CONSTANTS.URL.CONSOLE+"/dash/location/info",method:"GET",responseType:"text"}).then(t=>{t.data?e(t.data):(console.log("File is not exist"),e())}).catch(t=>{console.warn("Failed to get info ",t),e()})},v=e=>{h()({url:window.CONSTANTS.URL.CONSOLE+"/dash/cam/list/ipcam",method:"GET",responseType:"text"}).then(t=>{t.data?e(t.data):(console.log("Ipcam does not exist"),e([]))}).catch(t=>{console.warn("Failed to get ipCams",t),e([])})},b=e=>{h()({url:window.CONSTANTS.URL.CONSOLE+"/dash/scanner/list",method:"GET",responseType:"text"}).then(t=>{t.data?e(t.data):(console.log("File is not exist"),e([]))}).catch(t=>{console.warn("Failed to get hubs ",t),e([])})},f=(e,t)=>{h()({url:window.CONSTANTS.URL.CONSOLE+"/dash/hubs/detected/"+e,method:"GET",responseType:"text"}).then(e=>{const s=e.data;s&&_.isArray(s.data)?t(s):(console.log("fail to load connectedGadget"),t({}))}).catch(e=>{console.warn("Failed to get hub list connected to gadget ",e),t({})})},w=(e,t)=>{h()({url:window.CONSTANTS.URL.CONSOLE+"/dash/beacons/list/"+e,method:"GET",responseType:"text"}).then(e=>{e.data?t(e.data):(console.log("beacon is not exist"),t([]))}).catch(e=>{console.warn("Failed to get beacons ",e),t([])})},I=(e,t,s)=>{h()({url:window.CONSTANTS.URL.CONSOLE+"/dash/beacons/detected/"+e,method:"GET",responseType:"text"}).then(e=>{const i=e.data;i&&_.isArray(i.data)?t(i.data):s("not exist")}).catch(e=>{s(e)})},y=(e,t,s)=>{h()({url:window.CONSTANTS.URL.CONSOLE+"/dash/beacons/"+e,method:"GET",responseType:"text"}).then(i=>{i.data?t(i.data):s(`Failed to get gadget, id: ${e}`)}).catch(e=>{s(e)})},E=e=>{const t=window.CONSTANTS.URL.BASE_IMG+"map.png";h()({url:window.CONSTANTS.URL.CONSOLE+"/dashboard/location/view",method:"GET",responseType:"text"}).then(s=>{s.data?(console.log("Success to Get map image file"),e(window.location.protocol+"//"+window.location.host+s.data)):(console.log("Sorry, Img file does not exist"),e(t))}).catch(s=>{console.warn("Failed to get map file ",s),e(t)})},N=(e,t,s)=>{var i=window.CONSTANTS.URL.YOUR_CLOUD+"/mib/v1/sense/"+e;h()({method:"GET",headers:{},url:i}).then(e=>{e&&e.data?t(e.data.v.img_url):s()}).catch(e=>{s(e)})},T=(e,t,s)=>{let i=new FormData;e?(i.append("file",e),h.a.post(window.CONSTANTS.URL.CONSOLE+"/dashboard/location/upload",i,{headers:{"Content-Type":"multiart/form-data"}}).then(e=>{console.log("Success to Upload map image file"),t("http://"+window.location.host+e.data)}).catch(e=>{s(e)})):s()};let k=null;class C{constructor(e,t,s){if(k)return k;this._timers=[],this.isRunning=!1,this._vm=e,this._detectedCallback=t||function(){},this._failCallback=s||function(){},this.check_threshold=null,this.info=null,k=this}start(e){this.info=e,this.isRunning&&(this.isRunning=!0),_.isNumber(this.info.interval)?this.check_threshold=1e3*this.info.interval:this.check_threshold=6e4,this._timers.push(setInterval(()=>{this._refreshBeacons()},this.check_threshold)),console.info("Beacon detector started")}stop(){this._clearTimer(),this.isRunning=!1,console.info("Beacon detector stopped")}_refreshBeacons(){let e=this._vm.$store.getters.getHubsWhichIsInMap,t=0,s=0;_.isEmpty(e)||w(this.info.product_id,i=>{this._vm.$store.commit("removeGadgets"),this._vm.$store.commit("removeHubs"),this._vm.$store.commit("addDetectedGadget",i),_.forEach(e,e=>{e.view===window.CONSTANTS.HUB_VIEW.IN_MAP&&(t++,I(e.id,e=>{s++,this._vm.$store.commit("addDetectedHubGadget",e),s===t&&this._detectedCallback(console.debug("Success to update"))},e=>{this._failCallback(e)}))})},e=>{this._failCallback(e)})}_clearTimer(){this._.forEach(this._timers,e=>{try{clearInterval(e)}catch(t){console.warn("Failed to clear detector timer.",t)}}),this._timers=[]}}var S={methods:{isNumber:e=>!_.isNaN(e)&&_.isNumber(e)}},L=(s("5118"),{name:"Map",data(){return{id:"map",map:null,url:"",zoomLv:"",layer:"",hubLayer:"",workerLayer:"",camLayer:"",ipcam:"",ipcams:[],product_id:null,contextCoordinate:null,infoWindow:null,hubInfoWindow:null,gadgetInfoNumber:this._.keys(window.CONSTANTS.GADGET_INFO),selectFilteredBeaconsUpdateBefore:this._.keys(window.CONSTANTS.GADGET_INFO),selectFilteredBeaconsUpdateAfter:this._.keys(window.CONSTANTS.GADGET_INFO),bcns:{},bcnsData:{},hubsData:{},options:{custom:null,items:[]},markerMap:{hubs:{},gadgets:{},cams:{}}}},methods:{initloadMap(){this.showLoading(),this.services.getMapFiles(e=>{this.map=new l["c"](this.id,{center:[90,50],zoom:5,maxZoom:7,minZoom:4,maxExtent:new l["a"](0,0,180,85),zoomAnimation:!0,zoomInCenter:!0,panAnimation:!1,dragRotate:!1,dragPitch:!1,drgaRotatePitch:!1,touchGesture:!1,touchZoom:!1,touchRotate:!1,touchPitch:!1,touchZoomRotate:!1,doubleClickZoom:!1,baseLayer:new l["b"]("base",[{url:e,extent:[0,0,180,85],opactiy:1}],{opactiy:1})}),this.map.once("baselayerload",()=>{this.layer=new l["e"]("vector").addTo(this.map),this.hubLayer=new l["e"]("vector1").addTo(this.map),this.workerLayer=new l["e"]("vector2").addTo(this.map),this.camLayer=new l["e"]("vector3").addTo(this.map),this.workerLayer.setZIndex(3),this.hubLayer.setZIndex(1),this.initContextMenu(),this.map.fitExtent(),this.services.getInfo(e=>{e&&(this.loadHubs(e),this.loadIpCams(),this.initBeaconLocationHandler(e)),this.hideLoading()})})})},initBeaconLocationHandler(e,t,s){this.beaconDetector=new C(this,()=>{let e=this.$store.getters.getHubsWhichIsInMap;if(this.hubInfoWindow&&this.hubInfoWindow.remove(),this._.isEmpty(this.infoWindow)||this.infoWindow.remove(),this.selectFilteredBeaconsUpdateAfter=this._.clone(this.selectFilteredBeaconsUpdateBefore),this._.isEmpty(e))console.warn("There is no hub id, so we cannot update hub data");else{let t={};this._.forEach(e,e=>{t[e.id]=this.$store.getters.getHub(e.id),this.removeGadgetMarkersWhenHubIsMoved(e.id)}),this.hasSameGadget(()=>{this._.forEach(t,(e,t)=>{this.drawWorkers(t,e.custom.map_location)})},e=>{s(e)})}},e=>{console.warn("There's no data to update")}),this.beaconDetector.start(e)},initContextMenu(){this.contextMenuOption={custom:!0,items:'<div class="custom_menu"><div class="plus-symbol"></div>\n                    <div class="deviceText">Device</div><div class="addText">ADD</div>\n                    <div class="additem">\n                    <div class="scanneritem">Add SCANNER</div>\n                    <div class="camitem">Add IPCAM</div></div></div>',dx:-75},this.map.on("contextmenu",e=>{this.contextCoordinate=e.coordinate,this.map.setMenu(this.contextMenuOption).openMenu(e.coordinate),document.getElementsByClassName("scanneritem")[0].onclick=()=>{this.handleAddHub(e.coordinate)},document.getElementsByClassName("camitem")[0].onclick=()=>{this.handleAddIPCam(e.coordinate)}})},loadHubs(e){console.debug("Try load hubs"),this.services.getBeacons(e.product_id,e=>{this.$store.commit("addDetectedGadget",e),this._loadHubs()})},_loadHubs(){this.services.getHubs(e=>{console.log("hubList",e),this.$store.commit("addHubs",e);const t=this.$store.getters.getHubs;this._.forEach(t,e=>{_.isEmpty(e.custom.map_location)||this.drawHub(e.id,e.custom.map_location)})})},loadGadgets(e,t,s){this.services.getDetectBeaconList(e,e=>{this.$store.commit("addDetectedHubGadget",e),this.hasSameGadget(t)},e=>{s(e)})},handleAddHub(e){this.showhubList(e,e=>{this.map.closeMenu(e),this.drawHub(e,this.contextCoordinate)})},showhubList(e,t){this.services.getHubs(s=>{this.$store.commit("addHubs",s),this.options.items=[];let i='<div class="custom_menu"><div class="plus-symbol"></div>\n                                    <div class="addText">HUB</div>\n                                    <div class="additem"></div></div>';if(this.map.setMenu({custom:!0,items:i}).openMenu(e),this._.isEmpty(s)||this._.forEach(s,(e,s)=>{if(!this._.has(this.markerMap.hubs,e.id))if(e.custom&&e.custom.map_location)console.debug(`The ${e.name} hub has location data. so skip`);else{let i=document.createElement("div");i.id=`hubitem${s}`,i.innerText=e.name,i.onclick=()=>{t(e.id)},document.getElementsByClassName("additem")[0].appendChild(i)}}),!document.getElementsByClassName("additem")[0].children.length){let e=document.createElement("div");e.className="noScanner",e.innerText="No Scanner",document.getElementsByClassName("additem")[0].appendChild(e)}},function(e){console.warn("Failed to load hub list.")})},drawHub(e,t){console.debug("Try draw hub, id: ",e);let s=null,i=this.$store.getters.getHub(e);this.zoomLv=this.map.getZoom()/11*50,s=new l["d"]([t.x,t.y],{symbol:{markerFile:`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab1.svg`,markerWidth:this.zoomLv,markerHeight:this.zoomLv},draggable:!0}).addTo(this.hubLayer),s.on("click",()=>{this.showHubInfoWindow(e,s)}),s.on("contextMenu",()=>{this.showContextMenu(e,0,s)}),s.on("dragstart",()=>{s.closeInfoWindow()}),s.on("dragend",t=>{i.custom.map_location={x:t.coordinate.x,y:t.coordinate.y},this._updateHubData(i,()=>{this.loadGadgets(e,()=>{this.drawWorkers(e,s._coordinates)})})}),this.markerMap.hubs[e]=s,i.custom.map_location={x:t.x,y:t.y},this._.has(i.custom,"is_counted_hub")?this._.isEqual(i.custom.is_counted_hub,!0)&&s.updateSymbol({markerFile:`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab10.svg`}):i.custom.is_counted_hub=!1,this._updateHubData(i,()=>{this.$store.commit("HubIsInMap",e),this.loadGadgets(e,()=>{this.drawWorkers(e,t)},e=>{console.log("load gadgets failed",e)}),this.map.on("zoomend",e=>{this.zoomLv=this.map.getZoom()/11*50,s.updateSymbol({markerWidth:this.zoomLv,markerHeight:this.zoomLv})})})},removeHubMarker(e){let t=this.markerMap.hubs[e];if(this._.isEmpty(t))console.warn(`Failed to remove hub marker, cannot find marker by given id: ${e}`);else{let s=this.$store.getters.getHub(e);this._.isEmpty(s)?console.warn(`Failed to clear hub location, cannot found hub model by given id: ${e}`):(delete s.custom.map_location,delete s.custom.is_counted_hub,this._updateHubData(s,()=>{this.$store.commit("updateHubData",s)},e=>{console.log("load hub counting failed",e)}),console.log("success to remove hubmarker")),this.$store.commit("HubIsNotInMap",e),t.remove()}let s=this.$store.getters.getHubsWhichIsInMap,i=this.$store.getters.getdetectedGadgetList;this._.forEach(s,t=>{t.view===window.CONSTANTS.HUB_VIEW.NOT_IN_MAP&&this._.forEach(i,(t,s)=>{this._.includes(t.hubIdList,e)&&(t.hubIdList.length>1||(t.view=window.CONSTANTS.HUB_VIEW.NOT_IN_MAP,delete i[s],this.bcnsData[s].marker.remove(),delete this.bcnsData[s]),t.hubIdList=this._.without(t.hubIdList,e))})}),this.hasSameGadget(()=>{this._.forEach(s,e=>{e.view===window.CONSTANTS.HUB_VIEW.IN_MAP&&this.drawWorkers(e.id,this.markerMap.hubs[e.id]._coordinates)})}),delete this.markerMap.hubs[e]},removeGadgetMarkersWhenHubIsMoved(e){let t=this.markerMap.gadgets[e];this._.isEmpty(t)||this._.forEach(t,t=>{t.remove(),this.markerMap.gadgets[e]={}}),delete this.markerMap.gadgets[e]},showHubInfoWindow(e,t,s){let i="",o=0,a="",n={},d=this.$store.getters.getBeaconWithHubs(e),c=this.$store.getters.getHub(e);this._.isEmpty(this.infoWindow)||this.infoWindow.remove(),this._.isEmpty(d)?(i+='<div class="workerInfo-empty">Theres no hub to load</div>',o+=0):(this._.forEach(d,e=>{if(!n[e.gid]){n[e.gid]={};var t=this.$store.getters.getdetectedGadgetName(e.gid);if(t){const s=new Date(1e3*e._t).toLocaleTimeString("eu");i+=`<div class="workerInfo-content" id="${e.gid}">\n                                        <div class="workerInfo-wrapper">\n                                        <div class="workerInfo-name">${t}</div>\n                                        <span class="workerInfo-time">Today ${s}</span></div></div>`,o++}}}),0===o&&(i+='<div class="workerInfo-empty">Theres no hub to load</div>')),a=c.custom.is_counted_hub?"ON":"OFF",t.setInfoWindow({content:`<div class="worker_menu">\n                    <div class="worker">\n                    <div class="workerId">\n                    <div class="workerkey">SCANNER</div><div class="hubInfo" title="${c.name}">${c.name}</div></div>\n                    <div class="workerCount"><div class="workerkey">WORKER</div>${o}</div>\n                    <div class="forcount">For Counting</div>\n                    <label class="moi-onoff-toggle-hub">\n\t                <input class="moi-toggle-button-hub" type="checkbox">\n\t                <span class="moi-toggle-slider-hub round-hub">${a}</span>\n                    </label>\n                    </div>\n                    <div class="workerInfo">${i}</div>\n                    <div class="close-button-custom"></div></div></div>`,width:350,custom:!0,dy:-200}),t.openInfoWindow(),document.getElementsByClassName("moi-toggle-button-hub")[0].checked=!!c.custom.is_counted_hub,document.getElementsByClassName("moi-toggle-button-hub")[0].onchange=()=>{c.custom.is_counted_hub=!!document.getElementsByClassName("moi-toggle-button-hub")[0].checked;let e=`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab1.svg`;document.getElementsByClassName("moi-toggle-slider-hub")[0].innerText="OFF",c.custom.is_counted_hub&&(document.getElementsByClassName("moi-toggle-slider-hub")[0].innerText="ON",e=`${window.CONSTANTS.URL.BASE_IMG}icon-hub-tab10.svg`);let t=this.markerMap.hubs[c.id];t&&t.updateSymbol({markerFile:e}),this._updateHubData(c,()=>{this.$store.commit("updateHubData",c)},e=>{console.log("load hub counting failed",e)})},this._.forEach(d,e=>{let t=this.$store.getters.getdetectedGadgetList[e.gid];document.getElementById(e.gid).onclick=()=>{this.showGadgetInFoWindow(t,this.bcnsData[e.gid].marker)}}),_.last(document.getElementsByClassName("close-button-custom")).onclick=()=>{t._infoWindow.remove()}},_updateHubData(e,t,s){this.services.updateHubData(e,()=>{t()},e=>{s()})},drawWorkers(e,t){let s=this._.values(this.$store.getters.getdetectedGadgetList),i=1;this.zoomLv=this.map.getZoom()/11*50,this._.forEach(s,(s,o)=>{let a=null,n=[];if(this._.includes(s.hubIdList,e)){this.bcnsData[s.gid]&&s.view===window.CONSTANTS.HUB_VIEW.IN_MAP&&this.bcnsData[s.gid].marker.remove(),this._.isEmpty(s.custom)?n.push(t.x,t.y-i/10):n.push(s.custom.x,s.custom.y),a=s.tags?new l["d"](n,{symbol:{markerFile:window.CONSTANTS.URL.BASE_IMG+`icon-worker${s.tags}`+"-tab.svg",markerWidth:this.zoomLv,markerHeight:this.zoomLv}}).addTo(this.workerLayer):new l["d"](n,{symbol:{markerFile:window.CONSTANTS.URL.BASE_IMG+"icon-worker1-tab.svg",markerWidth:this.zoomLv,markerHeight:this.zoomLv}}).addTo(this.workerLayer),this.$store.commit("GadgetIsInMap",s.gid),this._.isEmpty(this.bcnsData[s.gid])?this.bcnsData[s.gid]={marker:a,tags:s.tags}:this.bcnsData[s.gid].marker=a,this._.includes(this.selectFilteredBeaconsUpdateBefore,this._.first(s.tags))||(a.hide(),this.$store.commit("GadgetIsnotInMap",s.gid)),_.isEmpty(s.tags)&&a.updateSymbol("markerFile",window.CONSTANTS.URL.BASE_IMG+"icon-alert-tab.svg"),a.on("click",()=>{this.showGadgetInFoWindow(s,this.bcnsData[s.gid].marker)});let o=this.markerMap.gadgets[e];o||(o=[],this.markerMap.gadgets[e]=o),this.map.on("zoomend",e=>{this.zoomLv=this.map.getZoom()/11*50,a.updateSymbol({markerWidth:this.zoomLv,markerHeight:this.zoomLv})}),o.push(a),i++}})},showGadgetInFoWindow(e,t){let s=window.CONSTANTS.GADGET_INFO[this.bcnsData[e.gid].tags],i=this.$store.getters.getdetectedGadgetList[e.gid].hubIdList,o=null,a="";this._.isEmpty(i)||(this._.forEach(i,e=>{o=this.$store.getters.getHub(e).name,a+='<div class="scannerName" title="'+o+'">'+o+"</div>"}),a+="</div>"),e.tags?t.setInfoWindow({content:`<div class="bcns">\n                        <div class="bcnsInfo1">\n                        <div class="bcnskey1">NAME</div>\n                        <div class="bcnName1" title="${e.name}">${e.name}</div>\n                        <div class="bcnskey1">KIND</div>\n                        <div class="bcnName1" title="${s}">${s}</div>\n                        <div class="scannerData">SCANNER</div>\n                        <div class="scannerNameList">\n                        ${a}\n                        </div><div class="loading-panel"></div><div class="loader"><div></div><div></div><div></div><div></div></div>\n                        <img class="bcnsImg1" src="${window.CONSTANTS.URL.BASE_IMG}item${e.tags}.png"></img>\n                        <div class="close-button-custom"></div></div></div>`,width:400,bottom:11,custom:!0,dy:-250,single:!1}):t.setInfoWindow({content:`<div class="bcns">\n                        <div class="bcnsInfo1">\n                        <div class="bcnskey1">NAME</div>\n                        <div class="bcnName1" title="${e.name}">${e.name}</div>\n                        <div class="bcnskey1">KIND</div>\n                        <div class="bcnName1" title="${s}">${s}</div>\n                        <div class="scannerData">SCANNER</div>\n                        <div class="scannerNameList">\n                        ${a} \n                        </div><div class="loading-panel"></div><div class="loader"><div></div><div></div><div></div><div></div></div>\n                        <img class="bcnsImg1" src="${window.CONSTANTS.URL.BASE_IMG}item1.png"></img>\n                        <div class="close-button-custom"></div></div></div>`,width:400,bottom:11,custom:!0,dy:-250,single:!1}),t.openInfoWindow();const n=this._.first(document.getElementsByClassName("loader")),d=this._.first(document.getElementsByClassName("loading-panel"));this.services.getBeaconImg(e.gid,e=>{let t=document.getElementsByClassName("bcnsImg1");e&&!this._.isEmpty(t)&&(t[0].src=e),n&&(n.remove(),d.remove())},e=>{n&&(n.remove(),d.remove())}),_.last(document.getElementsByClassName("close-button-custom")).onclick=()=>{t._infoWindow.remove()}},loadIpCams(){console.debug("Try load ipcams"),this.services.getIpcams(e=>{this.$store.commit("addIpcams",e),this.drawIpCams(e)})},handleAddIPCam(e){this.showIpCamList(e,e=>{this.map.closeMenu(e),this.drawIpcam(e,this.contextCoordinate)})},showIpCamList(e,t){this.services.getIpcams(s=>{this.$store.commit("addIpcams",s),this.options.items=[];let i='<div class="custom_menu"><div class="plus-symbol"></div>\n                                <div class="addText">IPCAM</div>\n                                <div class="additem"></div></div>';if(this.map.setMenu({custom:!0,items:i}).openMenu(e),this._.isEmpty(s)||this._.forEach(s,(e,s)=>{if(!this._.has(this.markerMap.cams,e.id))if(e.custom&&e.custom.map_location)console.debug(`The ${e.name} cam has location data. so skip`);else{let i=document.createElement("div");i.id=`camitem${s}`,i.innerText=e.name,i.onclick=()=>{t(e.id)},document.getElementsByClassName("additem")[0].appendChild(i)}}),!document.getElementsByClassName("additem")[0].children.length){let e=document.createElement("div");e.className="noIpcam",e.innerText="No Ipcam",document.getElementsByClassName("additem")[0].appendChild(e)}},function(e){console.warn("Failed to load cam list.")})},drawIpCams(e){this._.forEach(e,e=>{this._.isEmpty(e.custom)||this._.isEmpty(e.custom.map_location)||this.drawIpcam(e.id,e.custom.map_location)})},drawIpcam(e,t){console.debug("Try draw ipcam, id: ",e);let s=null;var i=this.$store.getters.getIpCams(e);this.zoomLv=this.map.getZoom()/11*50;let o=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-default.svg`;i.custom.is_visible_moi&&(o=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-checked.svg`),s=new l["d"]([t.x,t.y],{symbol:{markerFile:o,markerWidth:this.zoomLv,markerHeight:this.zoomLv},draggable:!0}).addTo(this.camLayer),s.on("click",()=>{this.showIpcamWindow(e,s)}),s.on("contextmenu",()=>{this.showContextMenu(e,1,s)}),s.on("dragstart",()=>{s.closeInfoWindow()}),s.on("dragend",e=>{i.custom.map_location={x:e.coordinate.x,y:e.coordinate.y},this._updateIpcamData(i,()=>{this.$store.commit("updateIpcamData",i)},e=>{console.log("load ipcam failed",e)})}),this.markerMap.cams[e]=s,i.custom.map_location={x:t.x,y:t.y},this._updateIpcamData(i,()=>{this.$store.commit("updateIpcamData",i)},e=>{console.log("load ipcam failed",e)}),this.map.on("zoomend",e=>{this.zoomLv=this.map.getZoom()/11*50,s.updateSymbol({markerWidth:this.zoomLv,markerHeight:this.zoomLv})})},showIpcamWindow(e,t){let s=this.$store.getters.getIpCams(e),i=null;this._.isEmpty(this.infoWindow)||this.infoWindow.remove(),this._.isEmpty(s)?i+="UNKNOWN":i=s.name,t.setInfoWindow({content:`<div class="ipcam_menu">\n                    <div class="ipcam-container">\n                    <div class="ipcamId">\n                    <div class="ipcamKey">SCANNER</div><div class="ipcamInfo" title="${i}">${i}</div></div>\n                    <div class="moi">MOI System</div>\n                    <label class="moi-onoff-toggle">\n\t                <input class="moi-toggle-button" type="checkbox">\n\t                <span class="moi-toggle-slider round"></span>\n                    </label></div>\n                    <div class="ipcam-right-panel">\n                    </div><div class="bottom-shape"></div><div class="close-button"></div></div>`,custom:!0,dy:-403,single:!1}),t.openInfoWindow(),document.getElementsByClassName("moi-toggle-button")[0].checked=!!s.custom.is_visible_moi,document.getElementsByClassName("moi-toggle-button")[0].onchange=()=>{s.custom.is_visible_moi=document.getElementsByClassName("moi-toggle-button")[0].checked;let e=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-default.svg`;s.custom.is_visible_moi&&(e=`${window.CONSTANTS.URL.BASE_IMG}icon-ipcam-checked.svg`);let t=this.markerMap.cams[s.id];t&&t.updateSymbol({markerFile:e}),this._updateIpcamData(s,()=>{this.$store.commit("updateIpcamData",s)},e=>{console.log("load ipcam failed",e)})};var o="vxg_media_player"+(new Date).getTime(),a=document.createElement("div");a.setAttribute("id",o),a.setAttribute("class","mediaplayer vxgplayer");var n=document.getElementsByClassName("ipcam-right-panel")[0];n.appendChild(a);let d="";this._.isEmpty(s.custom)||(d=`rtsp://${s.custom.id}:${s.custom.password}@${s.custom.ip}`),vxgplayer(o,{url:d,width:600,height:335,controls:!0,nmf_path:"media_player.nmf",nmf_src:"static/libs/mediaplayer/pnacl/Release/media_player.nmf"}).ready(function(){console.log(" =>ready player "+o),vxgplayer(o).src(d),vxgplayer(o).play(),console.log(" <=ready player "+o)});var c=vxgplayer(o);c.onError(function(e){console.warn("error",e.error())}),this.ipcamInfoWindow=t._infoWindow,_.last(document.getElementsByClassName("close-button")).onclick=()=>{t._infoWindow.remove()}},removeIpcamMarker(e){let t=this.markerMap.cams[e];if(this._.isEmpty(t))console.warn(`Failed to remove ipcam marker, cannot find ipcam by given id: ${e}`);else{let s=this.$store.getters.getIpCams(e);this._.isEmpty(s)?console.warn(`Failed to clear ipcam location, cannot found ipcam model by given id: ${e}`):(delete s.custom.map_location,this.services.updateIpcamData(s,()=>{console.log("success to remove ipcam marker")},t=>{console.warn(`Failed to clear ipcam location, cannot found ipcam model by given id: ${e}`)})),t.remove()}delete this.markerMap.cams[e]},_updateIpcamData(e,t,s){this.services.updateIpcamData(e,t,s)},setGadgetLocation(e){let t={},s={},i={},o=0,a=0,n=0,d=null,c=null,r=0,l=0;t=this._.sortBy(e),t=this._.reverse(t),this._.forEach(t,e=>{let t=this.$store.getters.getHub(e.hid);this._.isEmpty(t.custom.map_location)||l<2&&(s[e.hid]=t.custom.map_location,s[e.hid].dist=e.dist,s[e.hid].gid=e.gid,l++)}),2===this._.size(s)&&(this._.forEach(s,(e,t)=>{0===r?d=e:c=e,this.isNumber(e.dist)&&(n+=e.dist),r++}),this._.inRange(Math.abs(d.y-c.y),9,13)?this._.inRange(d.y,48,72)&&(c.x>d.x?(o=(d.x+2*c.x)/3,a=(c.y+2*d.y)/3):(o=(c.x+2*d.x)/3,a=(d.y+2*c.y)/3)):(o=(d.x*c.dist+c.x*d.dist)/n,a=(d.y*c.dist+c.y*d.dist)/n)),this._.isEqual(o,0)||(this._.forEach(s,(e,t)=>{i={hid:t,gid:e.gid,x:o,y:a,zoomLv:this.map.getZoom()/20}}),this.$store.commit("addGadgetLocation",i))},hasSameGadget(e){const t=this.$store.getters.getdetectedGadgetList,s={};this._.forEach(t,(e,t)=>{e.hubIdList.length>1&&(s[t]={},s[t]=e.hubIdList)});let i=this._.keys(s).length,o=1;0==i?e():this._.forEach(s,(t,s)=>{this.services.getHubListConnectedToGadget(s,t=>{this.setGadgetLocation(t.data),i==o?e():o++})})},refilterBeacons(){this.selectFilteredBeaconsUpdateAfter=["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16"];this.$store.getters.getdetectedGadgetList;this._.forEach(this.bcnsData,(e,t)=>{this._.includes(this.selectFilteredBeaconsUpdateAfter,this._.first(e.tags))&&(this.bcnsData[t].marker.show(),this.$store.commit("GadgetIsInMap",t))}),this.selectFilteredBeaconsUpdateBefore=this._.clone(this.selectFilteredBeaconsUpdateAfter)},setFilteredBeacons(){this._.isEmpty(this.selectFilteredBeaconsUpdateAfter)?this._.forEach(this.bcnsData,(e,t)=>{this.$store.commit("GadgetIsnotInMap",t),e.marker.hide()}):this._.forEach(this.bcnsData,(e,t)=>{this._.includes(this.selectFilteredBeaconsUpdateAfter,this._.first(e.tags))?(this.$store.commit("GadgetIsInMap",t),e.marker.show()):(this.$store.commit("GadgetIsnotInMap",t),e.marker.hide())}),this.selectFilteredBeaconsUpdateBefore=this._.clone(this.selectFilteredBeaconsUpdateAfter)},bgChangeWorkerTab(e){var t=document.getElementById(`worker${e}`).src,s=t.replace(`icon-worker${e}.svg`,`filter-icon-worker${e}-tab.svg`);document.getElementById(`worker'${e}`).src=s,this._.includes(this.selectFilteredBeaconsUpdateAfter,e)||this.selectFilteredBeaconsUpdateAfter.push(e.toString()),document.getElementById(`worker${e}`).onclick=()=>{this.bgChangeWorker(e)}},bgChangeWorker(e){var t=document.getElementById(`worker${e}`).src,s=t.replace(`filter-icon-worker${e}-tab.svg`,`icon-worker${e}.svg`);document.getElementById(`worker${e}`).src=s,this._.forEach(this.selectFilteredBeaconsUpdateAfter,(t,s)=>{t===e.toString()&&this.selectFilteredBeaconsUpdateAfter.splice(s,1)}),document.getElementById("worker"+e).onclick=()=>{this.bgChangeWorkerTab(e)}},filterBeacons(){let e='<div class="filter_menu"><div>';var t=this.map.getCenter(),s={};t.y-=3,this.selectFilteredBeaconsUpdateAfter.length!=window.CONSTANTS.MINIMUM_NUMBER.FILTERED_BEACONS?this._.forEach(this.gadgetInfoNumber,t=>{this._.includes(this.selectFilteredBeaconsUpdateAfter,t)?e+=`<img id="worker${t}" class="workerImg" src="${window.CONSTANTS.URL.BASE_IMG}filter-icon-worker${t}-tab.svg">`:e+=`<img id="worker${t}" class="workerImg" src="${window.CONSTANTS.URL.BASE_IMG}icon-worker${t}.svg">`}):this._.forEach(this.gadgetInfoNumber,t=>{e+=`<img id="worker${t}" class="workerImg" src="${window.CONSTANTS.URL.BASE_IMG}filter-icon-worker${t}-tab.svg">`}),e+='</div>\n                    <div class="controlContainer">\n                    <button id="done" class="done">OK</button>\n                    <button id="reset" class="reset">Reset</button>\n                    </div><div class="close-button-filter"></div>\n                    </div>',s={autoPan:!0,autoCloseOn:!0,autoOpenOn:!0,content:e,custom:!0,dy:-250},this.infoWindow=new l["f"].InfoWindow(s),this.infoWindow.addTo(this.map).show(t),document.getElementById("clickbtnPlus").onclick=()=>{this.infoWindow.remove(),this.selectFilteredBeaconsUpdateAfter=this._.clone(this.selectFilteredBeaconsUpdateBefore)},document.getElementById("clickbtnMinus").onclick=()=>{this.infoWindow.remove(),this.selectFilteredBeaconsUpdateAfter=this._.clone(this.selectFilteredBeaconsUpdateBefore)},document.getElementsByClassName("done")[0].onclick=()=>{this.setFilteredBeacons(),this.infoWindow.remove(),this.selectFilteredBeaconsUpdateBefore=this._.clone(this.selectFilteredBeaconsUpdateAfter)},document.getElementsByClassName("reset")[0].onclick=()=>{this.refilterBeacons(),this.infoWindow.hide(),this.infoWindow.remove()},document.getElementsByClassName("close-button-filter")[0].onclick=()=>{this.infoWindow.remove(),this.selectFilteredBeaconsUpdateAfter=this._.clone(this.selectFilteredBeaconsUpdateBefore)},this._.forEach(this.gadgetInfoNumber,e=>{document.getElementById("worker"+e).onclick=()=>{this._.includes(this.selectFilteredBeaconsUpdateAfter,e)?this.bgChangeWorker(e,this.selectFilteredBeaconsUpdateAfter,()=>{}):this.bgChangeWorkerTab(e,this.selectFilteredBeaconsUpdateAfter,()=>{})}})},showLoading(){this.$emit("map-load",!0)},hideLoading(){this.$emit("map-load",!1)},showContextMenu(e,t,s){var i="",o="",a=null;switch(t){case window.CONSTANTS.CONTEXT_TYPE.SCANNER:var n=this.$store.getters.getHub(e);i="Scanner",n&&(o=n.name),a=this.removeHubMarker;break;case window.CONSTANTS.CONTEXT_TYPE.IPCAM:var d=this.$store.getters.getIpCams(e);i="IPCam",d&&(o=d.name),a=this.removeIpcamMarker;break}s.setInfoWindow({content:`<div class="context-menu-container ${i.toLowerCase()}">\n                    <div class="context-menu-top-panel"><div class="context-menu-text-wrapper">\n                    <div class="context-menu-type-text">${i}</div>\n                    <div class="context-menu-name-text">${o}</div></div></div>\n                    <div class="context-menu-bottom-panel">\n                    <div id="move-button" class="context-menu-button-frame ${i.toLowerCase()}"><div class="context-menu-button-panel">\n                    <div id="move-button-text" class="context-menu-button-text">${"Move "+i.toLowerCase()}</div></div></div>\n                    <div id="remove-button" class="context-menu-button-frame ${i.toLowerCase()}"><div class="context-menu-button-panel">\n                    <div id="remove-button-text" class="context-menu-button-text">${"Remove "+i.toLowerCase()}</div></div></div></div></div>`,width:350,custom:!0,dy:-100}),s.openInfoWindow(),document.getElementById("remove-button").onclick=function(){a(e),s.closeInfoWindow()}}},computed:{isEmptyUrl(){return this._.isEmpty(this.mapUrl)}},created(){this.$emit("select-button"),K.$on("zoomIn",()=>{this.map.zoomIn(7)}),K.$on("zoomOut",()=>{this.map.zoomOut(6)}),K.$on("filter",()=>{this.filterBeacons()})},mounted(){this.initloadMap()},mixins:[S]}),$=L,A=(s("54d9"),s("2877")),B=Object(A["a"])($,c,r,!1,null,null,null),M=B.exports,O=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"topContainer"}},[s("div",{attrs:{id:"leftContainer"}},[s("div",{attrs:{id:"zoom"}},[s("img",{attrs:{id:"clickbtnPlus",src:"static/location/imgs/icon-plus.svg"},on:{click:e.zoomIn}}),s("img",{attrs:{id:"clickbtnMinus",src:"static/location/imgs/icon-minus.svg"},on:{click:e.zoomOut}})]),s("div",{attrs:{id:"filter"}},[s("img",{attrs:{id:"clickbtnFilter",src:"static/location/imgs/icon-filter.svg"},on:{click:e.filter}})])]),s("div",{attrs:{id:"rightContainer"}},[s("div",{attrs:{id:"upload"}},[s("button",{attrs:{id:"clickbtn"},on:{click:function(t){return e.$refs.file.click()}}},[e._m(0)]),s("input",{ref:"file",attrs:{type:"file",id:"file",accept:"image/jpeg, image/png, image/gif"},on:{change:e.onFileChange}})])])])},x=[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"btntitle"}},[e._v("Upload "),s("i",{staticClass:"fa fa-upload"})])}],U={name:"Top",methods:{zoomIn(){K.$emit("zoomIn")},zoomOut(){K.$emit("zoomOut")},onFileChange(e){this.file=e.target.files[0],this.submitFile()},getMapFile(e){this.services.getMapFile},submitFile(){this.services.postMapFile(this.file,e=>{window.location.reload()},e=>{console.warn("File upload failed")})},handleFileUpload(){this.file=this.$refs.file.files[0]},filter(){K.$emit("filter")}},computed:{isEmptyUrl(){return!this.url}},created(){this.getMapFile()}},H=U,G=(s("dee7"),Object(A["a"])(H,O,x,!1,null,null,null)),F=G.exports,W={components:{Map:M,Top:F},data(){return{isLoaded:!1}},methods:{handleMapLoad(e){this.isLoaded=e}}},R=W,D=(s("034f"),Object(A["a"])(R,n,d,!1,null,null,null)),z=D.exports,P=s("415c"),j=s.n(P),Z=(s("5453"),s("2f62"));a["a"].use(Z["a"]);var V=new Z["a"].Store({state:{hubs:{},gadgets:{},detectedgadgets:{},forInfohubs:[],drawnHubs:{},ipcams:{}},getters:{getHubs:e=>{return _.values(e.hubs)},getHub:e=>t=>{if(!_.isEmpty(e.hubs[t]))return e.hubs[t];console.warn(`Theres no hub data in hubid ${t}`)},getHubsWhichIsInMap:e=>{return _.values(e.drawnHubs)},getBeaconWithHubs:e=>t=>{if(!_.isEmpty(e.forInfohubs[t]))return e.forInfohubs[t];console.warn(`Theres no hub data in hubid ${t}`)},getdetectedGadgetList:e=>{return e.detectedgadgets},getdetectedGadgetName:e=>t=>{return e.detectedgadgets[t]?e.detectedgadgets[t].name:""},getIpCams:e=>t=>{if(e.ipcams[t])return e.ipcams[t];console.warn(`Theres no ipcam data in ipcam id ${t}`)}},mutations:{addHubs(e,t){_.forEach(t,t=>{e.hubs[t.id]=t})},HubIsInMap(e,t){_.isEmpty(e.drawnHubs[t])&&(e.drawnHubs[t]={}),e.drawnHubs[t].id=t,e.drawnHubs[t].view=1},HubIsNotInMap(e,t){_.isEmpty(e.drawnHubs[t])&&(e.drawnHubs[t]={}),e.drawnHubs[t].id=t,e.drawnHubs[t].view=0},addDetectedGadget(e,t){_.forEach(t,t=>{e.gadgets[t.id]=t})},addDetectedHubGadget(e,t){_.forEach(t,s=>{if(_.has(e.gadgets,s.gid)){let i=e.gadgets[s.gid];_.isEmpty(e.detectedgadgets[s.gid])&&(e.detectedgadgets[s.gid]={gid:i.id,hubIdList:[],name:i.name,dist:s.dist,uuid:i.beacon_spec.uuid,major:i.beacon_spec.major,minor:i.beacon_spec.minor,custom:{},tags:i.tags,view:0,account_id:i.account_id}),e.forInfohubs[s.hid]=t,_.isEmpty(e.detectedgadgets[s.gid].hubIdList.find(e=>e===s.hid))&&e.detectedgadgets[s.gid].hubIdList.push(s.hid)}})},addHubLocation(e,t){let s=e.hubs[t.id];_.isEmpty(s)||(s.custom.map_location=t.custom.map_location)},updateHubData(e,t){e.hubs[t.id]&&(e.hubs[t.id]=t)},addGadgetLocation(e,t){let s=e.gadgets[t.gid],i=e.detectedgadgets[t.gid];_.isEmpty(s)||_.isUndefined(i)||(_.forEach(e.detectedgadgets,(e,s)=>{_.isEmpty(e.custom)||_.isEmpty(e.custom.map_location)||(_.inRange(t.x,e.custom.x+t.zoomLv,e.custom.x-t.zoomLv)&&(t.x+=t.zoomLv/2),_.inRange(t.y,e.custom.y+t.zoomLv,e.custom.y-t.zoomLv)&&(t.y+=t.zoomLv/2))}),_.forEach(e.hubs,(e,s)=>{_.isEmpty(e.custom)||_.isEmpty(e.custom.map_location)||(_.inRange(t.x,e.custom.map_location.x+t.zoomLv,e.custom.map_location.x-t.zoomLv)&&(t.x+=t.zoomLv/2),_.inRange(t.y,e.custom.map_location.y+t.zoomLv,e.custom.map_location.y-t.zoomLv)&&(t.y+=t.zoomLv/2))}),s.custom=_.pick(t,["x","y"]),i.custom=_.pick(t,["x","y"]))},GadgetIsInMap(e,t){e.detectedgadgets[t]&&(e.detectedgadgets[t].view=window.CONSTANTS.HUB_VIEW.IN_MAP)},GadgetIsnotInMap(e,t){_.isEmpty(e.detectedgadgets[t])||(e.detectedgadgets[t].view=window.CONSTANTS.HUB_VIEW.NOT_IN_MAP)},removeGadgets(e){_.forEach(e.gadgets,(t,s)=>{e.gadgets[s]={},a["a"].delete(e.gadgets,s)}),_.forEach(e.detectedgadgets,(t,s)=>{e.detectedgadgets[s]={},a["a"].delete(e.detectedgadgets,s)})},removeHubs(e){_.forEach(e.forInfohubs,(t,s)=>{e.forInfohubs[s]={},a["a"].delete(e.forInfohubs,s)})},addIpcams(e,t){_.forEach(t,t=>{e.ipcams[t.id]=t})},updateIpcamData(e,t){e.ipcams[t.id]&&(e.ipcams[t.id]=t)}}});s("1aa9");s.d(t,"EventBus",function(){return K}),a["a"].prototype.$http=h.a,a["a"].prototype.services=i,a["a"].prototype.beaconDetector=o,a["a"].config.productionTip=!1;const K=new a["a"]({});a["a"].use(j.a),new a["a"]({store:V,render:e=>e(z)}).$mount("#locationTracking")},"64a9":function(e,t,s){},b347:function(e,t,s){},dee7:function(e,t,s){"use strict";var i=s("1d68"),o=s.n(i);o.a}});
//# sourceMappingURL=app.642ed885.js.map